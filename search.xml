<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>【OpenCV入门】读取图片/视频/调用摄像头</title>
      <link href="/2021/09/30/%E3%80%90OpenCV%E5%85%A5%E9%97%A8%E3%80%91%E8%AF%BB%E5%8F%96%E5%9B%BE%E7%89%87-%E8%A7%86%E9%A2%91-%E8%B0%83%E7%94%A8%E6%91%84%E5%83%8F%E5%A4%B4/"/>
      <url>/2021/09/30/%E3%80%90OpenCV%E5%85%A5%E9%97%A8%E3%80%91%E8%AF%BB%E5%8F%96%E5%9B%BE%E7%89%87-%E8%A7%86%E9%A2%91-%E8%B0%83%E7%94%A8%E6%91%84%E5%83%8F%E5%A4%B4/</url>
      
        <content type="html"><![CDATA[<hr><p>我的个人博客：<a href="https://oceanbloom.github.io/">谋仁·Blog</a><br>公众号：谋仁的麻袋</p><hr><h1 id="读取图片"><a href="#读取图片" class="headerlink" title="读取图片"></a>读取图片</h1><ul><li>预期效果：从指定路径读取一张图片并显示出来。</li><li>源代码：</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span><span class="comment">//输入输出流</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> cv;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;<span class="comment">//c++标准库</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> _DEBUG</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib,<span class="meta-string">&quot;opencv_world453d.lib&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib,<span class="meta-string">&quot;opencv_world453.lib&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// _DEBUG</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">string path = <span class="string">&quot;Resources/test.png&quot;</span>;<span class="comment">//相对路径</span></span><br><span class="line">Mat outImg=<span class="built_in">imread</span>(path);<span class="comment">//从指定路径读取图片信息</span></span><br><span class="line"><span class="built_in">imshow</span>(<span class="string">&quot;图片&quot;</span>, outImg);<span class="comment">//将图片显示出来</span></span><br><span class="line"><span class="built_in">waitKey</span>(<span class="number">0</span>);<span class="comment">//参数为0时暂停时间是无穷</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>必要的补充：</p><ul><li><p>cv::Mat cv::imread(const cv::String &amp;filename,int flags);<br>  作用：从一个文件中加载一张图片。<br>  输入参数1：const string类型，图片文件的路径（带文件名及后缀）。<br>  输入参数2：int类型，读取的格式，<a href="https://blog.csdn.net/z914022466/article/details/52709981">具体参考这里</a><br>  返回：Mat对象（Mat类型是用于存储图像信息的矩阵）。</p></li><li><p>void cv::imshow(const cv::string &amp;winname,cv::InputArray mat);<br> 作用：将图片显示在窗口中。<br> 输入参数1：const string类型，窗口的名称。<br> 输出参数2：mat类型，待输出的图片。<br> 返回：空</p></li><li><p>int cv::waitKey(int delay);<br>  作用：延时函数，如果延时期间有按键按下则立即结束并返回按键的ASCII码。当参数delay=0，程序一直延时，直到有按键按下去；当参数delay&gt;0，则程序延时delay毫秒，并同时等待按键按下。<br>  输入参数：int类型，延时的时长；/或选择0一直延时。<br>  返回：返回按键的ASCII码。</p><h1 id="读取视频文件"><a href="#读取视频文件" class="headerlink" title="读取视频文件"></a>读取视频文件</h1><p>视频就是由一张张图片组成的，所以在读取图片的基础上套一个while循环，不断地获取新的图片并显示出来就可以完成视频的读取了。</p></li><li><p>预期效果：从指定路径读取一个视频文件（视频的图像，不包括音频），并播放出来。</p></li><li><p>源代码：</p></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span><span class="comment">//输入输出流</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> cv;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;<span class="comment">//c++标准库</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> _DEBUG</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib,<span class="meta-string">&quot;opencv_world453d.lib&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib,<span class="meta-string">&quot;opencv_world453.lib&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// _DEBUG</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">string path = <span class="string">&quot;Resources/test_video.mp4&quot;</span>;</span><br><span class="line"><span class="function">VideoCapture <span class="title">testVideo</span><span class="params">(path)</span></span>;<span class="comment">//从视频文件的路径读取</span></span><br><span class="line">Mat videoImg;<span class="comment">//接收每一帧读取的图像</span></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;<span class="comment">//循环不断获取新的图片并显示出来</span></span><br><span class="line">testVideo.<span class="built_in">read</span>(videoImg);<span class="comment">//读取摄像头的照片并存放在Mat类型的videoImg中</span></span><br><span class="line"><span class="built_in">imshow</span>(<span class="string">&quot;Video&quot;</span>, videoImg);<span class="comment">//将图片显示出来</span></span><br><span class="line"><span class="built_in">waitKey</span>(<span class="number">3</span>);<span class="comment">//相邻每帧图片间隔时间（单位：ms</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>必要的补充：</p><ul><li>class cv::VideoCapture<br> 作用：对视频进行读取操作以及调用摄像头。<br> 实例化以后传入string类型的视频文件路径以读取文件；传入int类型接入的指定摄像头的ID以调用指定摄像头。</li></ul><h1 id="调用摄像头"><a href="#调用摄像头" class="headerlink" title="调用摄像头"></a>调用摄像头</h1><p>在读取视频程序的基础上，将VideoCapture类型的实例传进string类型路径换成int类型的摄像头ID后就完成了调用摄像头操作。</p><ul><li>预期效果：调用指定摄像头，窗口中显示摄像头拍到的内容。</li><li>源代码：</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span><span class="comment">//输入输出流</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> cv;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;<span class="comment">//c++标准库</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> _DEBUG</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib,<span class="meta-string">&quot;opencv_world453d.lib&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib,<span class="meta-string">&quot;opencv_world453.lib&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// _DEBUG</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="function">VideoCapture <span class="title">testVideo</span><span class="params">(<span class="number">0</span>)</span></span>;<span class="comment">//调用0号摄像头</span></span><br><span class="line">Mat videoImg;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;<span class="comment">//循环不断获取新的图片并显示出来</span></span><br><span class="line">testVideo.<span class="built_in">read</span>(videoImg);<span class="comment">//读取摄像头的照片并存放在Mat类型的videoImg中</span></span><br><span class="line"><span class="built_in">imshow</span>(<span class="string">&quot;Video&quot;</span>, videoImg);<span class="comment">//将图片显示出来</span></span><br><span class="line"><span class="built_in">waitKey</span>(<span class="number">3</span>);<span class="comment">//相邻每帧图片间隔时间（单位：ms</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> OpenCV </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> OpenCV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【C#】值传递、引用传递和string类型的不可变性</title>
      <link href="/2021/09/26/%E3%80%90C-%E3%80%91%E5%80%BC%E4%BC%A0%E9%80%92%E3%80%81%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92%E5%92%8Cstring%E7%B1%BB%E5%9E%8B%E7%9A%84%E4%B8%8D%E5%8F%AF%E5%8F%98%E6%80%A7/"/>
      <url>/2021/09/26/%E3%80%90C-%E3%80%91%E5%80%BC%E4%BC%A0%E9%80%92%E3%80%81%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92%E5%92%8Cstring%E7%B1%BB%E5%9E%8B%E7%9A%84%E4%B8%8D%E5%8F%AF%E5%8F%98%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="值类型和引用类型"><a href="#值类型和引用类型" class="headerlink" title="值类型和引用类型"></a>值类型和引用类型</h1><p>值类型/引用类型包含有：</p><ul><li>值类型：int、double、bool、char、decimal、struct、enum</li><li>引用类型：string、自定义类、数组、集合、object、接口</li></ul><p>二者的区别：</p><ul><li><p>1、值类型和引用类型在内存上存储的地方不同：</p><p>值类型存储在栈中，引用类型存储在堆中。</p></li><li><p>2、在传递值类型和传递引用类型时，传递方式不同；</p></li></ul><h1 id="值类型的传递"><a href="#值类型的传递" class="headerlink" title="值类型的传递"></a>值类型的传递</h1><p>值类型在传递的时候，传递的是值本身。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> 值传递和引用传递</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">int</span> a = <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">int</span> b = a;</span><br><span class="line">            b = <span class="number">2</span>;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;a=&#123;0&#125;&quot;</span>,a);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;b=&#123;0&#125;&quot;</span>,b);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://img-blog.csdnimg.cn/52a0d4d7e4d046beb4404cedec5e8191.bmp#pic_center"></p><p>内存图：</p><p><img src="https://img-blog.csdnimg.cn/fd13147c6dba45aea6653ce055a25ea0.bmp#pic_center"></p><p>在执行 int b=a; 时，在栈中开辟一块空间用于存储b，并将a中的值传给b。执行完 b=2; 后，b被赋予了新值，并覆盖了原来的值。根据输出结果，值传递后，b的值与a的值无关，互不影响。</p><h1 id="引用类型的传递"><a href="#引用类型的传递" class="headerlink" title="引用类型的传递"></a>引用类型的传递</h1><blockquote><p>注意：这里引用传递的运行结果放在string类型上会有所不同，这是因为string类型具有不可变性，string类型的不可变性在下文会有介绍。</p></blockquote><p>引用类型传递的时候，传递的是对这个对象的引用（即存在堆中的地址）。</p><p>下面以自定义类（Person）来说明：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> 值传递和引用传递</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Person p1 = <span class="keyword">new</span> Person();</span><br><span class="line">            p1.Name = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line">            Person p2 = p1;</span><br><span class="line">            p2.Name = <span class="string">&quot;李四&quot;</span>;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;p1.Name=&#123;0&#125;&quot;</span>,p1.Name);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;p2.Name=&#123;0&#125;&quot;</span>, p2.Name);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Person</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">private</span> <span class="built_in">string</span> _name;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">string</span> Name</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">get</span> &#123; <span class="keyword">return</span> _name; &#125;</span><br><span class="line">                <span class="keyword">set</span> &#123; _name = <span class="keyword">value</span>; &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://img-blog.csdnimg.cn/1e56b4b41da74f2e8b50fd8545f41921.bmp#pic_center"></p><p>内存图：</p><p><img src="https://img-blog.csdnimg.cn/36be77aa33c74a359260815efa7ae71c.bmp#pic_center"></p><p>创建完成p1对象后，在堆上开辟一块存储空间，并将该存储空间的地址放在栈上，栈中这块空间的地址（标识）是p1。当p1对象传递给p2后，只是将对堆中的存储的引用（堆中的地址）复制一份传给p2，完成传递后p1和p2共同指向同一块内存，所以p1或p2中任意一个更改存储内容后，另一个也会改变。</p><h1 id="string类型的不可变性"><a href="#string类型的不可变性" class="headerlink" title="string类型的不可变性"></a>string类型的不可变性</h1><p>先按照上述“引用类型的传递”的思路来看string类型的传递：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> 值传递和引用传递</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">string</span> a = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line">            <span class="built_in">string</span> b = a;</span><br><span class="line">            b = <span class="string">&quot;李四&quot;</span>;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;a=&#123;0&#125;&quot;</span>, a);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;b=&#123;0&#125;&quot;</span>, b);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行结果：</p><p><img src="https://img-blog.csdnimg.cn/3bb582279a9346d4bf9b4f38f8fdbdd9.bmp#pic_center"></p><p>从运行结果可以看出，string类型的传递和一般引用类型不同，这是因为string类型具有不可变性：</p><ul><li>当给一个字符串重新赋值以后，旧值并没有销毁，而是重新开辟了一块空间用于存储新值。</li></ul><p>内存图：</p><p><img src="https://img-blog.csdnimg.cn/041f1ecf1a8e48da83c7924845bcb1f4.bmp#pic_center"></p><p>在a赋值“张三”并传递给b后，根据“引用类型的传递”，a和b共同指向“张三”（如图：堆地址为10001）这块内存。但是，在b重新被赋值为“李四”后，堆中开辟一块空间存储“李四”，旧值“张三”依然存在，新值的堆地址（如图：堆地址为10002）赋给栈中b的存储以使b指向“李四”。至此，a和b就不再指向同一块堆空间了。故运行结果与一般引用类型有所不同。</p>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用C语言实现飞机大战小游戏</title>
      <link href="/2021/09/18/%E7%94%A8C%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0%E9%A3%9E%E6%9C%BA%E5%A4%A7%E6%88%98%E5%B0%8F%E6%B8%B8%E6%88%8F/"/>
      <url>/2021/09/18/%E7%94%A8C%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0%E9%A3%9E%E6%9C%BA%E5%A4%A7%E6%88%98%E5%B0%8F%E6%B8%B8%E6%88%8F/</url>
      
        <content type="html"><![CDATA[<hr><p>我的个人博客：<a href="https://oceanbloom.github.io/">谋仁·Blog</a><br>该项目已上传至GitHub：<a href="https://github.com/OceanBloom/Plane-War-1.0">点击跳转</a></p><hr><h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>这是一个用C语言实现的基于EasyX图形库的飞机大战小游戏，很有意思的小项目。对初学者很友好哦！快来看一下吧！</p><h2 id="运行环境"><a href="#运行环境" class="headerlink" title="运行环境"></a>运行环境</h2><p>Windows10+Visual Studio 2019+EasyX_20210730</p><h2 id="整体功能思维导图"><a href="#整体功能思维导图" class="headerlink" title="整体功能思维导图"></a>整体功能思维导图</h2><p><img src="https://img-blog.csdnimg.cn/705b7fccef5249d8bfbaf86952d54ad9.png"></p><h2 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h2><ul><li>菜单界面（此时鼠标指在GO！按钮，按钮发生变色以反馈用户）</li></ul><p><img src="https://img-blog.csdnimg.cn/22274009979c4f89844c8b1c1c194239.png"></p><ul><li>玩法界面（跳出弹窗介绍游戏规则）</li></ul><p><img src="https://img-blog.csdnimg.cn/c8f9f7f75a50430cb3cb48c40c0b3034.png"></p><ul><li>进入游戏界面（敌机在窗体最上端随机出现，玩家移动/发射子弹）</li></ul><p><img src="https://img-blog.csdnimg.cn/c1558985d85c4dae898c5cd662e68308.png"></p><p><img src="https://img-blog.csdnimg.cn/6ebe4b94ebf34924ac15b06d3da8a282.png"></p><ul><li>游戏结束</li></ul><p><img src="https://img-blog.csdnimg.cn/93e6ddf7918d48f6bff55fc3de4ace48.png"></p><h1 id="具体功能的实现"><a href="#具体功能的实现" class="headerlink" title="具体功能的实现"></a>具体功能的实现</h1><h2 id="图形界面：EasyX"><a href="#图形界面：EasyX" class="headerlink" title="图形界面：EasyX"></a>图形界面：EasyX</h2><h3 id="EasyX图形库简介"><a href="#EasyX图形库简介" class="headerlink" title="EasyX图形库简介"></a>EasyX图形库简介</h3><ul><li>EasyX Graphics Library 是针对 Visual C++ 的免费绘图库，因其学习成本低、易上手、应用范围广、功能丰富等特点广受欢迎。</li><li>我们学习C语言面对着黑框，枯燥又乏味。想要做一些图形编程，但很多图形库学习难度大，学习门槛高，如：Win32,OpenlGI等。这时候我们就可以使用EasyX图形库来做一些图形编程，既简单又有趣。</li></ul><h3 id="EasyX图形库的一些基本功能（该项目用到的）"><a href="#EasyX图形库的一些基本功能（该项目用到的）" class="headerlink" title="EasyX图形库的一些基本功能（该项目用到的）"></a>EasyX图形库的一些基本功能（该项目用到的）</h3><ul><li><p>如何让一张图片显现出来？分三步：</p><ul><li><p>绘制窗体–initgraph</p><p>例1：绘制一个宽×高为1522×787（该项目的窗口大小，单位：像素）的窗口。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">initgraph(<span class="number">1522</span>, <span class="number">787</span>);</span><br></pre></td></tr></table></figure><p>例2：绘制一个宽×高为1522×787的窗口，同时显示控制台窗口。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">initgraph(<span class="number">1522</span>, <span class="number">787</span>, EW_SHOWCONSOLE);</span><br></pre></td></tr></table></figure><p>显示控制台窗口便于调试。</p></li><li><p>加载图片–loadimage</p><p>例：将菜单界面背景图加载出来。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">IMAGE menuBackground;<span class="comment">//存放游戏菜单界面背景图</span></span><br><span class="line">loadimage(&amp;menuBackground, <span class="string">&quot;./资源/menuBackground.png&quot;</span>);<span class="comment">//加载背景图</span></span><br></pre></td></tr></table></figure></li><li><p>粘贴图片–putimage</p><p>例：将加载好的菜单界面背景图片显示出来。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">putimage(<span class="number">0</span>, <span class="number">0</span>, &amp;menuBackground);</span><br></pre></td></tr></table></figure><p>注：前两个参数分别表示横坐标、纵坐标。这里的坐标轴是以窗体左上角为原点。横坐标是操作对象的左上角到窗体左边的垂直距离，纵坐标是操作对象到窗体上边的垂直距离。</p></li></ul></li><li><p>关于颜色</p><ul><li><p>已经预定义的颜色</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">常量值颜色</span><br><span class="line">------------------------</span><br><span class="line">BLACK<span class="number">0</span>黑</span><br><span class="line">BLUE<span class="number">0xAA0000</span>蓝</span><br><span class="line">GREEN<span class="number">0x00AA00</span>绿</span><br><span class="line">CYAN<span class="number">0xAAAA00</span>青</span><br><span class="line">RED<span class="number">0x0000AA</span>红</span><br><span class="line">MAGENTA<span class="number">0xAA00AA</span>紫</span><br><span class="line">BROWN<span class="number">0x0055AA</span>棕</span><br><span class="line">LIGHTGRAY<span class="number">0xAAAAAA</span>浅灰</span><br><span class="line">DARKGRAY<span class="number">0x555555</span>深灰</span><br><span class="line">LIGHTBLUE<span class="number">0xFF5555</span>亮蓝</span><br><span class="line">LIGHTGREEN<span class="number">0x55FF55</span>亮绿</span><br><span class="line">LIGHTCYAN<span class="number">0xFFFF55</span>亮青</span><br><span class="line">LIGHTRED<span class="number">0x5555FF</span>亮红</span><br><span class="line">LIGHTMAGENTA<span class="number">0xFF55FF</span>亮紫</span><br><span class="line">YELLOW<span class="number">0x55FFFF</span>黄</span><br><span class="line">WHITE<span class="number">0xFFFFFF</span>白</span><br></pre></td></tr></table></figure></li><li><p>自定义颜色–RGB</p><p>光学三原色：红绿蓝。调整三种颜色的比例可以合成任意颜色。RGB(红,绿,蓝)三个部分分别是0~255值。为调节到想要的颜色，可以借助电脑自带画图软件编辑颜色中找；也可以使用QQ截图，指针瞄准指定颜色后按C键复制RGB值。</p></li></ul></li><li><p>图形的输出</p><ul><li><p>例：画一个虚线为轮廓且连接处为圆形的圆（本项目按钮样式）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">setlinestyle(PS_DASH | PS_ENDCAP_ROUND, 宽度像素 );</span><br><span class="line">setfillcolor(fillColor);<span class="comment">//填充色</span></span><br><span class="line">setlinecolor(lineColor);<span class="comment">//轮廓线的颜色</span></span><br><span class="line">fillcircle(x, y, radius);<span class="comment">//画圆（横坐标，纵坐标，半径）</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>文本的输出</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/***********************</span></span><br><span class="line"><span class="comment">*输入：（int类型）水印文本横坐标、（int类型）文本纵坐标、（int类型）文本字体尺寸、文本颜色</span></span><br><span class="line"><span class="comment">*输出：空</span></span><br><span class="line"><span class="comment">*作用：在任意位置生成任意大小、颜色的文本充当水印</span></span><br><span class="line"><span class="comment">************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">WaterMark</span><span class="params">(<span class="keyword">int</span> textX,<span class="keyword">int</span> textY, <span class="keyword">int</span> textSize,COLORREF textColor)</span> </span>&#123;</span><br><span class="line">setbkmode(TRANSPARENT);<span class="comment">//背景透明使文本背景不再是黑色</span></span><br><span class="line">settextstyle(textSize, <span class="number">0</span>, <span class="string">&quot;隶书&quot;</span>);<span class="comment">//字体格式；</span></span><br><span class="line">settextcolor(textColor);<span class="comment">//字体颜色</span></span><br><span class="line">outtextxy(textX, textY, <span class="string">&quot;By 曹谋仁&quot;</span>);<span class="comment">//在（textX，textY）处显示“By 曹谋仁”文本</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该函数就纯粹的体现了文本输出功能。</p><p>这里主要讲一下settextstyle函数</p><ul><li><p>设置当前字体样式–settextstyle</p><p>该函数有四个重载，这里只介绍一下本项目中使用的这一种。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">settextstyle</span><span class="params">(<span class="keyword">int</span> nHeight,<span class="keyword">int</span> nWidth,LPCTSTR lpszFace)</span></span>;</span><br></pre></td></tr></table></figure><p>nHeight–指定字符的高度（逻辑单位）。</p><p>nWidth–字符的平均宽度（逻辑单位）。如果为 0，则比例自适应。（注：上方水印文本输出函数中第二个参数为0即比例自适应后，就可以直接调节第一个参数来调节整体文本的大小。）</p><p>lpszFace–字体的种类，这里可以直接用中文加双引号来表示部分字体。</p></li></ul></li><li><p>如何更流畅地动态绘图？</p><p>在设备上不断进行绘图操作时，会产生闪频现象。为了流畅的绘图，我们可以用下面两个函数处理。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">BeginBatchDraw();<span class="comment">//开始批量绘图</span></span><br><span class="line"><span class="comment">//这里放绘图代码</span></span><br><span class="line">EndBatchDraw();<span class="comment">//结束批量绘图</span></span><br></pre></td></tr></table></figure></li><li><p>如何进行鼠标的操作？</p><ul><li><p>存储鼠标信息的类型是ExMessage类型。故先建立记录鼠标信息的变量。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ExMessage mouse;<span class="comment">//记录鼠标消息</span></span><br></pre></td></tr></table></figure></li><li><p>获取当前鼠标信息，并立即返回–peekmessage函数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (peekmessage(&amp;mouse, EM_MOUSE)) </span><br><span class="line">&#123;<span class="comment">//如果获取到鼠标的信息，则进行这里的操作</span></span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该函数也可以通过改变第二个参数来获取不同的信息：</p><table><thead><tr><th align="center">标志</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">EM_MOUSE</td><td align="center">鼠标消息。</td></tr><tr><td align="center">EM_KEY</td><td align="center">按键消息。</td></tr><tr><td align="center">EM_CHAR</td><td align="center">字符消息。</td></tr><tr><td align="center">EM_WINDOW</td><td align="center">窗口消息。</td></tr></tbody></table></li><li><p>检测鼠标上的操作。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (peekmessage(&amp;mouse, EM_MOUSE)) </span><br><span class="line">&#123;<span class="comment">//如果获取到鼠标的信息，则进行这里的操作</span></span><br><span class="line">    <span class="keyword">if</span> (mouse.message == WM_LBUTTONDOWN) &#123;</span><br><span class="line">        <span class="comment">//按下鼠标左键时进入这里</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当然，此函数不仅仅能检测到鼠标左键按下的信息，本项目关于鼠标只用到左键按下的操作，若想了解更详细→<a href="https://docs.easyx.cn/zh-cn/exmessage">EasyX 文档 - ExMessage</a></p></li></ul></li><li><p>键盘上的操作</p><p>该项目上用到的函数是：GetAsyncKeyState(键值);传入一个键值，若检测到按下则返回true。一些键值如下：</p><ul><li>上：VK_UP    下：VK_DOWN    左：VK_LEFT    右：VK_RIGHT</li><li>如果是字母按键：’字母的大写’。如果是字母小写只能检测到小写，如果是字母大写，则大小写均能检测到。</li></ul></li></ul><p>有关EasyX图形库的基本操作就介绍到这，这里主要是本项目中用到的一些功能。相比整个图形库所有功能而言实乃九牛之一毛，冰山之一角。如果想深入了解更多，请点击这里跳转→<a href="https://docs.easyx.cn/zh-cn">EasyX 文档</a></p><h2 id="菜单界面"><a href="#菜单界面" class="headerlink" title="菜单界面"></a>菜单界面</h2><p>菜单界面除了最基本的图片或文本的输出外，最主要的就是怎么实现一个按钮。</p><p>所谓的按钮就是绘制一个图形，图形中绘制一个按钮上的文本。然后在这个带有文本的图形上添加鼠标左键的监测信息。至此，一个按钮所具备的最基本的特征都已经完成了。在本项目菜单界面的按钮上，为了更好的反馈用户，增加了当鼠标指着按钮时，按钮会发生变色。源代码如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**************按钮信息************/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BUTTONNUM 3</span></span><br><span class="line"><span class="comment">//按钮顺序：&#123;开始,离开,玩法，关闭&#125;</span></span><br><span class="line"> <span class="keyword">int</span> buttonX[BUTTONNUM] = &#123; <span class="number">1042</span>,<span class="number">1335</span>,<span class="number">785</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> buttonY[BUTTONNUM] = &#123; <span class="number">563</span>,<span class="number">648</span>,<span class="number">679</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> buttonR[BUTTONNUM] = &#123; <span class="number">145</span>,<span class="number">93</span>,<span class="number">85</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> buttonTextSize[BUTTONNUM] = &#123; <span class="number">155</span>,<span class="number">70</span>,<span class="number">60</span> &#125;;</span><br><span class="line">COLORREF buttonFillColor[BUTTONNUM] = &#123; RGB(<span class="number">243</span>, <span class="number">113</span>, <span class="number">141</span>) ,RGB(<span class="number">243</span>, <span class="number">113</span>, <span class="number">141</span>) ,RGB(<span class="number">243</span>, <span class="number">113</span>, <span class="number">141</span>) &#125;;</span><br><span class="line">COLORREF buttonLineColor[BUTTONNUM] = &#123; RGB(<span class="number">255</span>, <span class="number">225</span>, <span class="number">0</span>) ,RGB(<span class="number">255</span>, <span class="number">225</span>, <span class="number">0</span>) ,RGB(<span class="number">255</span>, <span class="number">225</span>, <span class="number">0</span>) &#125;;</span><br><span class="line">COLORREF buttonTextColor[BUTTONNUM] = &#123; RGB(<span class="number">255</span>, <span class="number">225</span>, <span class="number">0</span>) ,RGB(<span class="number">255</span>, <span class="number">225</span>, <span class="number">0</span>) ,RGB(<span class="number">255</span>, <span class="number">225</span>, <span class="number">0</span>) &#125;;</span><br><span class="line"><span class="keyword">double</span> buttonLineRate[BUTTONNUM] = &#123; <span class="number">0.1</span>,<span class="number">0.1</span>,<span class="number">0.1</span>&#125;;</span><br><span class="line"><span class="comment">/***********************************/</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">CircleButton</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> x;<span class="comment">//圆心坐标</span></span><br><span class="line"><span class="keyword">int</span> y;</span><br><span class="line"><span class="keyword">int</span> r;<span class="comment">//半径</span></span><br><span class="line">COLORREF fillColor;</span><br><span class="line">COLORREF lineColor;</span><br><span class="line">COLORREF textColor;</span><br><span class="line"><span class="keyword">int</span> textSize;<span class="comment">//字体大小</span></span><br><span class="line"><span class="keyword">double</span> rate;<span class="comment">//轮廓线粗细占半径的比例</span></span><br><span class="line">&#125;buttons[BUTTONNUM];</span><br><span class="line"><span class="comment">/***********************</span></span><br><span class="line"><span class="comment">*输入：按钮圆心横坐标，纵坐标，半径，填充色，轮廓色，文本内容，文本大小，轮廓线粗细占半径比例</span></span><br><span class="line"><span class="comment">*输出：空</span></span><br><span class="line"><span class="comment">*作用：产生任意位置、大小、填充颜色、轮廓颜色、文本的圆形按钮</span></span><br><span class="line"><span class="comment">************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SingleButton</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y,<span class="keyword">int</span> radius , COLORREF fillColor, COLORREF lineColor, COLORREF textColor, <span class="keyword">const</span> <span class="keyword">char</span>* text,<span class="keyword">int</span> textSize,<span class="keyword">double</span> rate)</span> </span>&#123;</span><br><span class="line">setbkmode(TRANSPARENT);<span class="comment">//背景透明使文本背景不再是黑色</span></span><br><span class="line"><span class="comment">//设置画线样式为宽度是半径的0.1倍的虚线，端点为圆形</span></span><br><span class="line">setlinestyle(PS_DASH | PS_ENDCAP_ROUND, (<span class="keyword">int</span>) (rate*(<span class="keyword">double</span>)radius) );</span><br><span class="line">setfillcolor(fillColor);<span class="comment">//填充色</span></span><br><span class="line">setlinecolor(lineColor);<span class="comment">//轮廓线的颜色</span></span><br><span class="line">fillcircle(x, y, radius);<span class="comment">//画圆</span></span><br><span class="line"><span class="keyword">char</span> word[<span class="number">50</span>] = <span class="string">&quot;&quot;</span>;<span class="comment">//用于接收输入的文本</span></span><br><span class="line">strcpy_s(word, text);<span class="comment">//将输入的文本复制到Word中</span></span><br><span class="line">settextstyle(textSize, <span class="number">0</span>, <span class="string">&quot;黑体&quot;</span>);<span class="comment">//字体格式</span></span><br><span class="line"><span class="keyword">int</span> textX = x - textwidth(text) / <span class="number">2</span>;<span class="comment">//位置居中</span></span><br><span class="line"><span class="keyword">int</span> textY = y - textheight(text) / <span class="number">2</span>;</span><br><span class="line">settextcolor(textColor);<span class="comment">//字体颜色</span></span><br><span class="line">outtextxy(textX, textY, text);<span class="comment">//显示文本</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/***********************</span></span><br><span class="line"><span class="comment">*输入：空</span></span><br><span class="line"><span class="comment">*输出：空</span></span><br><span class="line"><span class="comment">*作用：初始所有按钮信息</span></span><br><span class="line"><span class="comment">************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ButtonInit</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; BUTTONNUM; i++)</span><br><span class="line">&#123;</span><br><span class="line">buttons[i].x = buttonX[i];</span><br><span class="line">buttons[i].y = buttonY[i];</span><br><span class="line">buttons[i].r = buttonR[i];</span><br><span class="line">buttons[i].textSize = buttonTextSize[i];</span><br><span class="line">buttons[i].fillColor = buttonFillColor[i];</span><br><span class="line">buttons[i].lineColor = buttonLineColor[i];</span><br><span class="line">buttons[i].textColor = buttonTextColor[i];</span><br><span class="line">buttons[i].rate = buttonLineRate[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/***********************</span></span><br><span class="line"><span class="comment">*输入：空</span></span><br><span class="line"><span class="comment">*输出：空</span></span><br><span class="line"><span class="comment">*作用：绘制出菜单界面中所有按钮</span></span><br><span class="line"><span class="comment">************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawMenuButtons</span><span class="params">()</span> </span>&#123;</span><br><span class="line">SingleButton(buttons[<span class="number">0</span>].x, buttons[<span class="number">0</span>].y, buttons[<span class="number">0</span>].r, buttons[<span class="number">0</span>].fillColor, buttons[<span class="number">0</span>].lineColor,</span><br><span class="line">buttons[<span class="number">0</span>].textColor, <span class="string">&quot; GO!&quot;</span>, buttons[<span class="number">0</span>].textSize,buttons[<span class="number">0</span>].rate);<span class="comment">//绘制开始游戏按钮</span></span><br><span class="line">SingleButton(buttons[<span class="number">1</span>].x, buttons[<span class="number">1</span>].y, buttons[<span class="number">1</span>].r, buttons[<span class="number">1</span>].fillColor, buttons[<span class="number">1</span>].lineColor,</span><br><span class="line">buttons[<span class="number">1</span>].textColor, <span class="string">&quot;离开&quot;</span>, buttons[<span class="number">1</span>].textSize, buttons[<span class="number">1</span>].rate);<span class="comment">//绘制退出游戏按钮</span></span><br><span class="line">SingleButton(buttons[<span class="number">2</span>].x, buttons[<span class="number">2</span>].y, buttons[<span class="number">2</span>].r, buttons[<span class="number">1</span>].fillColor, buttons[<span class="number">2</span>].lineColor,</span><br><span class="line">buttons[<span class="number">2</span>].textColor, <span class="string">&quot;玩法&quot;</span>, buttons[<span class="number">2</span>].textSize, buttons[<span class="number">2</span>].rate);<span class="comment">//绘制玩法介绍按钮</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/***********************</span></span><br><span class="line"><span class="comment">*输入：填充的新颜色，轮廓的新颜色，文本的新颜色</span></span><br><span class="line"><span class="comment">*输出：空</span></span><br><span class="line"><span class="comment">*作用：当鼠标指到菜单按钮时按钮进行变色以向用户反馈</span></span><br><span class="line"><span class="comment">************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MouseOnMenuButtons</span><span class="params">(COLORREF newFillColor, COLORREF newLineColor, COLORREF newTextColor)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">sqrt</span>(<span class="built_in">pow</span>((<span class="keyword">double</span>)mouse.x - buttons[<span class="number">0</span>].x, <span class="number">2.0</span>) + <span class="built_in">pow</span>((<span class="keyword">double</span>)mouse.y - buttons[<span class="number">0</span>].y, <span class="number">2.0</span>)) &lt;= buttons[<span class="number">0</span>].r)</span><br><span class="line">SingleButton(buttons[<span class="number">0</span>].x, buttons[<span class="number">0</span>].y, buttons[<span class="number">0</span>].r, newFillColor, newLineColor,</span><br><span class="line">newTextColor, <span class="string">&quot; GO!&quot;</span>, buttons[<span class="number">0</span>].textSize, buttons[<span class="number">0</span>].rate);<span class="comment">//鼠标指开始按钮时的变色</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">sqrt</span>(<span class="built_in">pow</span>((<span class="keyword">double</span>)mouse.x - buttons[<span class="number">1</span>].x, <span class="number">2.0</span>) + <span class="built_in">pow</span>((<span class="keyword">double</span>)mouse.y - buttons[<span class="number">1</span>].y, <span class="number">2.0</span>)) &lt;= buttons[<span class="number">1</span>].r)</span><br><span class="line">SingleButton(buttons[<span class="number">1</span>].x, buttons[<span class="number">1</span>].y, buttons[<span class="number">1</span>].r, newFillColor, newLineColor,</span><br><span class="line">newTextColor, <span class="string">&quot;离开&quot;</span>, buttons[<span class="number">1</span>].textSize, buttons[<span class="number">1</span>].rate);<span class="comment">//鼠标指离开按钮时的变色</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">sqrt</span>(<span class="built_in">pow</span>((<span class="keyword">double</span>)mouse.x - buttons[<span class="number">2</span>].x, <span class="number">2.0</span>) + <span class="built_in">pow</span>((<span class="keyword">double</span>)mouse.y - buttons[<span class="number">1</span>].y, <span class="number">2.0</span>)) &lt;= buttons[<span class="number">2</span>].r)</span><br><span class="line">SingleButton(buttons[<span class="number">2</span>].x, buttons[<span class="number">2</span>].y, buttons[<span class="number">2</span>].r, newFillColor, newLineColor,</span><br><span class="line">newTextColor, <span class="string">&quot;玩法&quot;</span>, buttons[<span class="number">2</span>].textSize, buttons[<span class="number">2</span>].rate);<span class="comment">//鼠标指玩法按钮时的变色</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">DrawMenuButtons();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使文本始终在按钮中央的几何计算：</p><p><img src="https://img-blog.csdnimg.cn/2344a0d524d04943923974ca67d9e258.png"></p><p>以上是按钮的绘制，在添加鼠标左键检测时，（本项目圆形按钮）就是要保证鼠标光标的位置到圆心距离小于等于半径；</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="built_in">sqrt</span>(<span class="built_in">pow</span>((<span class="keyword">double</span>)mouse.x - buttons[<span class="number">0</span>].x, <span class="number">2.0</span>) + <span class="built_in">pow</span>((<span class="keyword">double</span>)mouse.y - buttons[<span class="number">0</span>].y, <span class="number">2.0</span>)) &lt;= buttons[<span class="number">0</span>].r)</span><br><span class="line">PlayingGame();</span><br></pre></td></tr></table></figure><p>由于像素坐标是整型的，所以为保证计算更加精确，要先将坐标转换成double类型。</p><h2 id="玩法介绍界面"><a href="#玩法介绍界面" class="headerlink" title="玩法介绍界面"></a>玩法介绍界面</h2><p>这部分主要有两部分组成：现将txt中内容读取到字符串中，再将字符串放在弹窗中显示出来。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/***********************</span></span><br><span class="line"><span class="comment">*输入：空</span></span><br><span class="line"><span class="comment">*输出：空</span></span><br><span class="line"><span class="comment">*作用：从文件中读取规则，产生一个有关规则介绍的弹窗</span></span><br><span class="line"><span class="comment">************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RulesWindow</span><span class="params">()</span> </span>&#123;</span><br><span class="line">HWND h = GetHWnd();<span class="comment">//获取窗口句柄</span></span><br><span class="line"><span class="keyword">char</span> ruleText[RULEMAX];</span><br><span class="line">FILE* fp; <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">fopen_s(&amp;fp,<span class="string">&quot;./资源/Rules.txt&quot;</span>,<span class="string">&quot;r&quot;</span>);<span class="comment">//打开存放规则文本的txt文件</span></span><br><span class="line"><span class="keyword">if</span> (fp == <span class="literal">NULL</span>)</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">1</span>);<span class="comment">//打不开文件时直接停止运行</span></span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(fgets(ruleText,RULEMAX,fp)!=<span class="literal">NULL</span>)</span><br><span class="line">MessageBoxA(h, ruleText, <span class="string">&quot;玩法简介&quot;</span>, MB_OK);</span><br><span class="line">&#125; </span><br><span class="line">fclose(fp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="游戏界面"><a href="#游戏界面" class="headerlink" title="游戏界面"></a>游戏界面</h2><h3 id="玩家图片的透明背景输出"><a href="#玩家图片的透明背景输出" class="headerlink" title="玩家图片的透明背景输出"></a>玩家图片的透明背景输出</h3><p>直接输出玩家飞机的图片的话，输出的样式是矩形的，影响美观。那么怎么能让计算机识别出背景并将其抠下来—-掩码图和白底原图。</p><p><img src="https://img-blog.csdnimg.cn/2ee77fa2491b49be97b74ecb21f538ab.png#pic_center"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">putimage(enemy[i].x, enemy[i].y, &amp;enemyImg[<span class="number">2</span>][<span class="number">0</span>], NOTSRCERASE);</span><br><span class="line">putimage(enemy[i].x, enemy[i].y, &amp;enemyImg[<span class="number">2</span>][<span class="number">1</span>], SRCINVERT); </span><br></pre></td></tr></table></figure><p>在同一位置先后粘贴掩码图和原图，就自然可以过滤掉背景。制作掩码图软件推荐：Photoshop。具体操作自行百度。</p><h3 id="玩家的移动"><a href="#玩家的移动" class="headerlink" title="玩家的移动"></a>玩家的移动</h3><p>当检测到相应方向按键后，玩家坐标向不同方位改变，一次改变多少像素来决定移动的速度。代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/***********************</span></span><br><span class="line"><span class="comment">*输入：（int类型）代表玩家飞机移动的速度</span></span><br><span class="line"><span class="comment">*输出：空</span></span><br><span class="line"><span class="comment">*作用：使玩家飞机移动</span></span><br><span class="line"><span class="comment">************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MyPlaneMove</span><span class="params">(<span class="keyword">int</span> speed)</span> </span>&#123;</span><br><span class="line"><span class="comment">//GetAsyncKeyState(_In_ int vKey);函数用于检测按键</span></span><br><span class="line"><span class="comment">//且移动更加流畅，可斜着移动</span></span><br><span class="line"><span class="keyword">if</span> (GetAsyncKeyState(VK_UP) || GetAsyncKeyState(<span class="string">&#x27;W&#x27;</span>)) &#123;<span class="comment">//大写W可同时表示W和w</span></span><br><span class="line"><span class="keyword">if</span>(myPlane.y&gt;<span class="number">0</span>)<span class="comment">//边界限制以防飞机移出界</span></span><br><span class="line">myPlane.y -= speed;<span class="comment">//上移</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (GetAsyncKeyState(VK_DOWN) || GetAsyncKeyState(<span class="string">&#x27;S&#x27;</span>)) &#123;</span><br><span class="line"><span class="keyword">if</span>(myPlane.y+ PLAYERHEIGHT&lt;HEIGHT)</span><br><span class="line">myPlane.y += speed;<span class="comment">//下移</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (GetAsyncKeyState(VK_LEFT) || GetAsyncKeyState(<span class="string">&#x27;A&#x27;</span>)) &#123;</span><br><span class="line"><span class="keyword">if</span>(myPlane.x+ PLAYERWIDTH /<span class="number">2</span>&gt;<span class="number">0</span>)</span><br><span class="line">myPlane.x -= speed;<span class="comment">//左移</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (GetAsyncKeyState(VK_RIGHT) || GetAsyncKeyState(<span class="string">&#x27;D&#x27;</span>)) &#123;</span><br><span class="line"><span class="keyword">if</span>(myPlane.x+ PLAYERWIDTH / <span class="number">2</span>&lt;WIDTH)</span><br><span class="line">myPlane.x += speed;<span class="comment">//右移</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//空格生成子弹</span></span><br><span class="line"><span class="comment">//引入一定延迟防止按一下空格产生多个子弹，同时可以控制相邻子弹的密度</span></span><br><span class="line"><span class="keyword">if</span> (GetAsyncKeyState(VK_SPACE) &amp;&amp; Timer(<span class="number">150</span>)) </span><br><span class="line">CreatBullet();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="敌机的产生与移动"><a href="#敌机的产生与移动" class="headerlink" title="敌机的产生与移动"></a>敌机的产生与移动</h3><p>为方便对敌机的产生或消失的控制，在其结构体中添加bool live;true产生、false消失。产生坐标在窗体顶端即y=0；横坐标在可视范围内随机生成，这里用的rand()函数。</p><p>敌机产生后自动向下移动，即纵坐标＋speed。（同玩家移动原理）。</p><p>代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/***********************</span></span><br><span class="line"><span class="comment">*输入：空</span></span><br><span class="line"><span class="comment">*输出：空</span></span><br><span class="line"><span class="comment">*作用：产生单个敌机</span></span><br><span class="line"><span class="comment">************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreatEnemy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//敌机遍历</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ENEMYNUM; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (!enemy[i].live) &#123;<span class="comment">//遍历到一个敌机的存活状态为false，生成该单个敌机</span></span><br><span class="line"><span class="keyword">switch</span> (enemy[i].type) &#123;<span class="comment">//根据敌机类型决定血量</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>: enemy[i].hp = ENEMY0HP; <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>: enemy[i].hp = ENEMY1HP; <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>: enemy[i].hp = ENEMY2HP; <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>: enemy[i].hp = ENEMY3HP; <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">enemy[i].live = <span class="literal">true</span>;<span class="comment">//改为存活</span></span><br><span class="line"><span class="comment">//生成飞机位置在横轴上随机（范围：[0,WIDTH - enemy[i].enemyWidth]保证显示出完整的飞机）</span></span><br><span class="line">enemy[i].x = rand() % (WIDTH - enemy[i].enemyWidth);</span><br><span class="line">enemy[i].y = <span class="number">0</span>;<span class="comment">//窗口最顶端上生成</span></span><br><span class="line"><span class="keyword">break</span>;<span class="comment">//生成单个飞机后跳出循环</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/***********************</span></span><br><span class="line"><span class="comment">*输入：（int类型）表示敌机整体移动的速度（因为不同类型敌机移速不同）</span></span><br><span class="line"><span class="comment">*输出：空</span></span><br><span class="line"><span class="comment">*作用：使敌机移动</span></span><br><span class="line"><span class="comment">************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EnemyMove</span><span class="params">(<span class="keyword">int</span> speed)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ENEMYNUM; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (enemy[i].live) &#123;<span class="comment">//敌机产生后要自动向下移动</span></span><br><span class="line"><span class="comment">//两种移速方案</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> 1</span></span><br><span class="line"><span class="comment">//现采取的方案：不同类型敌机用不同常数乘speed以区分出速度</span></span><br><span class="line"><span class="keyword">switch</span> (enemy[i].type)</span><br><span class="line">&#123;<span class="comment">//  0--&gt;3  快--&gt;慢  </span></span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:enemy[i].y += <span class="number">5</span> * speed; <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:enemy[i].y += <span class="number">4</span> * speed; <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:enemy[i].y += <span class="number">3</span> * speed; <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:enemy[i].y += <span class="number">2</span> * speed; <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">elif</span> 0</span></span><br><span class="line"><span class="comment">//方案二：所有敌机速度随机（由于此方案移动不太流畅，未采用）</span></span><br><span class="line">enemy[i].y += (rand() % <span class="number">10</span> + <span class="number">1</span>) * speed;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="comment">//敌机完整地离开窗口后live恢复false以保证不断有敌机产生</span></span><br><span class="line"><span class="keyword">if</span> (enemy[i].y - enemy[i].enemyHeight &gt; HEIGHT)</span><br><span class="line">&#123;</span><br><span class="line">enemy[i].live = <span class="literal">false</span>;</span><br><span class="line">enemy[i].enemyDone = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="攻击系统"><a href="#攻击系统" class="headerlink" title="攻击系统"></a>攻击系统</h3><p>所谓攻击系统就是在飞机结构体中添加飞机的生命值，当玩家按空格绘制出一个子弹后，子弹自动向上移动，当子弹图片的区域与敌机图片区域有重叠（初中几何知识，在此不多赘述），则敌机Hp-1，子弹的live变为false即子弹打中敌机后消失。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/***********************</span></span><br><span class="line"><span class="comment">*输入：空</span></span><br><span class="line"><span class="comment">*输出：空</span></span><br><span class="line"><span class="comment">*作用：玩家飞机攻击系统</span></span><br><span class="line"><span class="comment">************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Attack</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ENEMYNUM; i++)<span class="comment">//遍历敌机</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (!enemy[i].live)</span><br><span class="line"><span class="keyword">continue</span>;<span class="comment">//跳过死亡敌机</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; BULLETNUM; j++)</span><br><span class="line">&#123;<span class="comment">//遍历子弹</span></span><br><span class="line"><span class="keyword">if</span> (!bullet[j].live)</span><br><span class="line"><span class="keyword">continue</span>;<span class="comment">//跳过死亡的子弹</span></span><br><span class="line"><span class="comment">//子弹与敌机一旦有重合区域则视为攻击有效（可用EDGE调整有效边缘）</span></span><br><span class="line"><span class="keyword">if</span> ((bullet[j].x + BULLETWIDTH &gt;= enemy[i].x -EDGE &amp;&amp; bullet[j].x &lt;= enemy[i].x + enemy[i].enemyWidth + EDGE)</span><br><span class="line">&amp;&amp; (bullet[j].y &gt;= enemy[j].y -EDGE &amp;&amp; bullet[j].y &lt;= enemy[i].y + enemy[i].enemyHeight + EDGE)) &#123;</span><br><span class="line">bullet[j].live = <span class="literal">false</span>;<span class="comment">//攻击后子弹死亡</span></span><br><span class="line">enemy[i].hp--;<span class="comment">//敌机减少一点血量</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (enemy[i].hp &lt;= <span class="number">0</span>)<span class="comment">//敌机血量&lt;=0后死亡</span></span><br><span class="line">enemy[i].live = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="玩家的血量控制"><a href="#玩家的血量控制" class="headerlink" title="玩家的血量控制"></a>玩家的血量控制</h3><p>玩家掉血的条件是：一、敌方深入我方内部； 或   二、玩家飞机与敌机直接接触。</p><p>条件一：敌机.y&gt;=窗口HEIGHT。条件二：玩家飞机图片与敌机图片有重合（同子弹与敌机的接触）。当触发扣血条件后玩家的hp-1，相应的左上角生命图片数量-1。</p><p>为避免同一敌机对玩家造成重复伤害，在结构体中加入：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bool</span> enemyDone;<span class="comment">//记录该敌机是否已经致使玩家扣血以防重复减血</span></span><br></pre></td></tr></table></figure><p>初始时，enemyDone为false，即该敌机可以对玩家造成伤害。当同一敌机首次触发扣血条件后，enemyDone变为true，此时该敌机不能再对玩家造成伤害，直到完全离开窗口然后重新初始化。</p><h3 id="游戏评分及结束界面"><a href="#游戏评分及结束界面" class="headerlink" title="游戏评分及结束界面"></a>游戏评分及结束界面</h3><p>当玩家血量减到0，游戏结束。在这里用一个弹窗中断游戏的进行，并询问是否要再来一局。如果再来一局，则用goto语句跳转到游戏的开头，如果不再继续，则用stdlib.h里的exit() 函数退出程序。</p><p>该游戏的评分就是玩家坚持的时长，坚持时间越长，即得分越高。对游戏时间的计时这里用的time.h里的clock()函数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/***********************</span></span><br><span class="line"><span class="comment">*输入：int类型  已经进行游戏的时间</span></span><br><span class="line"><span class="comment">*输出：unsigned int类型  如果游戏结束返回玩家对弹窗的选择，其他情况无意义</span></span><br><span class="line"><span class="comment">*作用：控制玩家什么时候减血或结束游戏</span></span><br><span class="line"><span class="comment">************************/</span></span><br><span class="line"><span class="function">UINT <span class="title">PlayerBlood</span><span class="params">(<span class="keyword">int</span> gameTime)</span> </span>&#123;</span><br><span class="line">HWND h = GetHWnd();<span class="comment">//获取窗口句柄</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ENEMYNUM; i++)<span class="comment">//遍历敌机</span></span><br><span class="line">&#123;  <span class="comment">//如果某敌机存活并尚未致使玩家掉血</span></span><br><span class="line"><span class="keyword">if</span> (enemy[i].live &amp;&amp; !enemy[i].enemyDone) &#123;</span><br><span class="line"><span class="comment">//减血情况一：敌机深入我方内部</span></span><br><span class="line"><span class="keyword">if</span> (enemy[i].y &gt;= HEIGHT)</span><br><span class="line">&#123;</span><br><span class="line">myPlane.hp--;</span><br><span class="line">playerBlood--;</span><br><span class="line">enemy[i].enemyDone = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//减血情况二：玩家飞机与敌机直接接触</span></span><br><span class="line"><span class="keyword">if</span> ((myPlane.x &lt; enemy[i].x + enemy[i].enemyWidth) &amp;&amp; (myPlane.x &gt; enemy[i].x - PLAYERWIDTH)</span><br><span class="line">&amp;&amp; (myPlane.y &lt; enemy[i].y + enemy[i].enemyHeight) &amp;&amp; (myPlane.y + PLAYERHEIGHT &gt; enemy[i].y))</span><br><span class="line">&#123;</span><br><span class="line">myPlane.hp--;</span><br><span class="line">playerBlood--;</span><br><span class="line">enemy[i].enemyDone = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">char</span> chTime[<span class="number">15</span>] = <span class="string">&quot;&quot;</span>;<span class="comment">//接收转换成字符串类型后的游戏时间</span></span><br><span class="line">_itoa_s(gameTime,chTime,<span class="number">15</span>,<span class="number">10</span>);<span class="comment">//_itoa_s函数将int类型转换成字符串类型</span></span><br><span class="line"><span class="comment">//拼接成一个字符串</span></span><br><span class="line"><span class="keyword">char</span> string1[<span class="number">100</span>] = <span class="string">&quot;游戏结束！太厉害了！本局中您已经坚持了&quot;</span>;</span><br><span class="line"><span class="keyword">char</span> string2[] = <span class="string">&quot;秒！是否再来一局？&quot;</span>;</span><br><span class="line"><span class="built_in">strcat</span>(string1, chTime);</span><br><span class="line"><span class="built_in">strcat</span>(string1, string2);</span><br><span class="line"><span class="keyword">if</span> (myPlane.hp &lt;= <span class="number">0</span>)<span class="comment">//血量掉完后跳出游戏结束弹窗</span></span><br><span class="line">&#123;</span><br><span class="line">mciSendStringA(<span class="string">&quot;close ./资源/战斗BGM.mp3&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">mciSendStringA(<span class="string">&quot;open ./资源/游戏结束BGM.mp3&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">mciSendStringA(<span class="string">&quot;play ./资源/游戏结束BGM.mp3&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">UINT choice = MessageBoxA(h, string1, <span class="string">&quot;游戏结束&quot;</span>, MB_YESNO);</span><br><span class="line"><span class="keyword">return</span> choice;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;<span class="comment">//其他路径中返回一个不影响YES/NO的值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="背景音乐的播放"><a href="#背景音乐的播放" class="headerlink" title="背景音乐的播放"></a>背景音乐的播放</h2><ul><li><p>库文件</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">  <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;mmsystem.h&gt;</span><span class="comment">//多媒体播放接口头文件</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment (lib,<span class="meta-string">&quot;winmm.lib&quot;</span>)<span class="comment">//加载静态库（用于播放音乐）</span></span></span><br></pre></td></tr></table></figure></li><li><p>打开并播放音乐。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mciSendStringA(<span class="string">&quot;open ./资源/战斗BGM.mp3&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);<span class="comment">//打开游戏界面BGM</span></span><br><span class="line">mciSendStringA(<span class="string">&quot;play ./资源/战斗BGM.mp3 repeat&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);<span class="comment">//播放游戏界面BGM</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/********************************************************</span></span><br><span class="line"><span class="comment"> * 程序目的：用C语言做一个飞机大战小游戏</span></span><br><span class="line"><span class="comment"> * 编译环境：visual studio 2019，EasyX_20210730</span></span><br><span class="line"><span class="comment"> * 作　　者：曹谋仁（个人Blog：https://oceanbloom.github.io/）</span></span><br><span class="line"><span class="comment"> * 发布日期：2021/9/19</span></span><br><span class="line"><span class="comment"> ********************************************************/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS<span class="comment">//防止对strcat()安全警告</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;graphics.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span> <span class="comment">//  exit() 函数</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;mmsystem.h&gt;</span><span class="comment">//多媒体播放接口头文件</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment (lib,<span class="meta-string">&quot;winmm.lib&quot;</span>)<span class="comment">//加载静态库（用于播放音乐）</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MYPLANEBLOOD 10</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STARTDELAY 2000<span class="comment">//开局敌机出没前的延迟（单位：ms）</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RULEMAX 500<span class="comment">//规则文本最大字数</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BULLETNUM 100<span class="comment">//一梭子弹的数量</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ENEMYNUM 30<span class="comment">//一波敌机的数量</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EDGE 2<span class="comment">//用于调整子弹命中敌机的有效边缘范围（单位：像素）</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//四种敌机血量宏定义</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ENEMY0HP 2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ENEMY1HP 3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ENEMY2HP 4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ENEMY3HP 5</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> region 图片资源尺寸</span></span><br><span class="line"><span class="comment">/************所有图片资源的尺寸************/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> WIDTH 1522<span class="comment">//窗口宽</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> HEIGHT 787<span class="comment">//窗口高</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PLAYERWIDTH 97<span class="comment">//玩家飞机图片宽</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PLAYERHEIGHT 75<span class="comment">//玩家飞机图片高</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BLOODWIDTH 39<span class="comment">//生命值图片宽和高</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BLOODHEIGHT 39</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BULLETWIDTH 30<span class="comment">//玩家子弹图片宽</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BULLETHEIGHT 60<span class="comment">//玩家子弹图片高</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EWIDTH0 59<span class="comment">//0号敌机图片宽</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EHEIGHT0 42<span class="comment">//0号敌机图片高</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EWIDTH1 80<span class="comment">//1号敌机图片宽</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EHEIGHT1 70<span class="comment">//1号敌机图片高</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EWIDTH2 99<span class="comment">//2号敌机图片宽</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EHEIGHT2 75<span class="comment">//2号敌机图片高</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EWIDTH3 125<span class="comment">//3号敌机图片宽</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> EHEIGHT3 81<span class="comment">//3号敌机图片高</span></span></span><br><span class="line"><span class="comment">/****************************************/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> endregion</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> region 按钮信息</span></span><br><span class="line"><span class="comment">/**************按钮信息************/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BUTTONNUM 3</span></span><br><span class="line"><span class="comment">//按钮顺序：&#123;开始,离开,玩法，关闭&#125;</span></span><br><span class="line"> <span class="keyword">int</span> buttonX[BUTTONNUM] = &#123; <span class="number">1042</span>,<span class="number">1335</span>,<span class="number">785</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> buttonY[BUTTONNUM] = &#123; <span class="number">563</span>,<span class="number">648</span>,<span class="number">679</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> buttonR[BUTTONNUM] = &#123; <span class="number">145</span>,<span class="number">93</span>,<span class="number">85</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> buttonTextSize[BUTTONNUM] = &#123; <span class="number">155</span>,<span class="number">70</span>,<span class="number">60</span> &#125;;</span><br><span class="line">COLORREF buttonFillColor[BUTTONNUM] = &#123; RGB(<span class="number">243</span>, <span class="number">113</span>, <span class="number">141</span>) ,RGB(<span class="number">243</span>, <span class="number">113</span>, <span class="number">141</span>) ,RGB(<span class="number">243</span>, <span class="number">113</span>, <span class="number">141</span>) &#125;;</span><br><span class="line">COLORREF buttonLineColor[BUTTONNUM] = &#123; RGB(<span class="number">255</span>, <span class="number">225</span>, <span class="number">0</span>) ,RGB(<span class="number">255</span>, <span class="number">225</span>, <span class="number">0</span>) ,RGB(<span class="number">255</span>, <span class="number">225</span>, <span class="number">0</span>) &#125;;</span><br><span class="line">COLORREF buttonTextColor[BUTTONNUM] = &#123; RGB(<span class="number">255</span>, <span class="number">225</span>, <span class="number">0</span>) ,RGB(<span class="number">255</span>, <span class="number">225</span>, <span class="number">0</span>) ,RGB(<span class="number">255</span>, <span class="number">225</span>, <span class="number">0</span>) &#125;;</span><br><span class="line"><span class="keyword">double</span> buttonLineRate[BUTTONNUM] = &#123; <span class="number">0.1</span>,<span class="number">0.1</span>,<span class="number">0.1</span>&#125;;</span><br><span class="line"><span class="comment">/***********************************/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> endregion</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Plane</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> x; <span class="comment">//横坐标</span></span><br><span class="line"><span class="keyword">int</span> y; <span class="comment">//纵坐标</span></span><br><span class="line"><span class="keyword">bool</span> live; <span class="comment">//是否存活</span></span><br><span class="line"><span class="keyword">int</span> type; <span class="comment">//飞机的类型，此处指几号敌机</span></span><br><span class="line"><span class="keyword">int</span> hp; <span class="comment">//血量，血量为0后死亡</span></span><br><span class="line"><span class="keyword">bool</span> enemyDone;<span class="comment">//记录该敌机是否已经致使玩家扣血以防重复减血</span></span><br><span class="line"><span class="keyword">int</span> enemyWidth; <span class="comment">//敌机图片宽</span></span><br><span class="line"><span class="keyword">int</span> enemyHeight; <span class="comment">//敌机图片高</span></span><br><span class="line">&#125;myPlane,bullet[BULLETNUM],enemy[ENEMYNUM];</span><br><span class="line"><span class="comment">//玩家飞机，存放子弹数据，存放敌机数据</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">CircleButton</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> x;<span class="comment">//圆心坐标</span></span><br><span class="line"><span class="keyword">int</span> y;</span><br><span class="line"><span class="keyword">int</span> r;<span class="comment">//半径</span></span><br><span class="line">COLORREF fillColor;</span><br><span class="line">COLORREF lineColor;</span><br><span class="line">COLORREF textColor;</span><br><span class="line"><span class="keyword">int</span> textSize;<span class="comment">//字体大小</span></span><br><span class="line"><span class="keyword">double</span> rate;<span class="comment">//轮廓线粗细占半径的比例</span></span><br><span class="line">&#125;buttons[BUTTONNUM];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> playerBlood = MYPLANEBLOOD;<span class="comment">//玩家血量</span></span><br><span class="line">ExMessage mouse;<span class="comment">//记录鼠标消息</span></span><br><span class="line">IMAGE menuBackground;<span class="comment">//存放游戏菜单界面背景图</span></span><br><span class="line">IMAGE playingBackground;<span class="comment">//存放游戏中背景图</span></span><br><span class="line">IMAGE playerImg[<span class="number">2</span>];<span class="comment">//存放玩家飞机的图片</span></span><br><span class="line">IMAGE playerBloodImg[<span class="number">2</span>];<span class="comment">//存放玩家生命图片</span></span><br><span class="line">IMAGE bulletImg[<span class="number">2</span>];<span class="comment">//存放玩家子弹图片</span></span><br><span class="line">IMAGE enemyImg[<span class="number">4</span>][<span class="number">2</span>];<span class="comment">//存放敌机图片资源</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/***********************</span></span><br><span class="line"><span class="comment">*输入：按钮圆心横坐标，纵坐标，半径，填充色，轮廓色，文本内容，文本大小，轮廓线粗细占半径比例</span></span><br><span class="line"><span class="comment">*输出：空</span></span><br><span class="line"><span class="comment">*作用：产生任意位置、大小、填充颜色、轮廓颜色、文本的圆形按钮</span></span><br><span class="line"><span class="comment">************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SingleButton</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y,<span class="keyword">int</span> radius , COLORREF fillColor, COLORREF lineColor, COLORREF textColor, <span class="keyword">const</span> <span class="keyword">char</span>* text,<span class="keyword">int</span> textSize,<span class="keyword">double</span> rate)</span> </span>&#123;</span><br><span class="line">setbkmode(TRANSPARENT);<span class="comment">//背景透明使文本背景不再是黑色</span></span><br><span class="line"><span class="comment">//设置画线样式为宽度是半径的0.1倍的虚线，端点为圆形</span></span><br><span class="line">setlinestyle(PS_DASH | PS_ENDCAP_ROUND, (<span class="keyword">int</span>) (rate*(<span class="keyword">double</span>)radius) );</span><br><span class="line">setfillcolor(fillColor);<span class="comment">//填充色</span></span><br><span class="line">setlinecolor(lineColor);<span class="comment">//轮廓线的颜色</span></span><br><span class="line">fillcircle(x, y, radius);<span class="comment">//画圆</span></span><br><span class="line"><span class="keyword">char</span> word[<span class="number">50</span>] = <span class="string">&quot;&quot;</span>;<span class="comment">//用于接收输入的文本</span></span><br><span class="line">strcpy_s(word, text);<span class="comment">//将输入的文本复制到Word中</span></span><br><span class="line">settextstyle(textSize, <span class="number">0</span>, <span class="string">&quot;黑体&quot;</span>);<span class="comment">//字体格式</span></span><br><span class="line"><span class="keyword">int</span> textX = x - textwidth(text) / <span class="number">2</span>;<span class="comment">//位置居中</span></span><br><span class="line"><span class="keyword">int</span> textY = y - textheight(text) / <span class="number">2</span>;</span><br><span class="line">settextcolor(textColor);<span class="comment">//字体颜色</span></span><br><span class="line">outtextxy(textX, textY, text);<span class="comment">//显示文本</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/***********************</span></span><br><span class="line"><span class="comment">*输入：空</span></span><br><span class="line"><span class="comment">*输出：空</span></span><br><span class="line"><span class="comment">*作用：初始所有按钮信息</span></span><br><span class="line"><span class="comment">************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ButtonInit</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; BUTTONNUM; i++)</span><br><span class="line">&#123;</span><br><span class="line">buttons[i].x = buttonX[i];</span><br><span class="line">buttons[i].y = buttonY[i];</span><br><span class="line">buttons[i].r = buttonR[i];</span><br><span class="line">buttons[i].textSize = buttonTextSize[i];</span><br><span class="line">buttons[i].fillColor = buttonFillColor[i];</span><br><span class="line">buttons[i].lineColor = buttonLineColor[i];</span><br><span class="line">buttons[i].textColor = buttonTextColor[i];</span><br><span class="line">buttons[i].rate = buttonLineRate[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/***********************</span></span><br><span class="line"><span class="comment">*输入：空</span></span><br><span class="line"><span class="comment">*输出：空</span></span><br><span class="line"><span class="comment">*作用：绘制出菜单界面中所有按钮</span></span><br><span class="line"><span class="comment">************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DrawMenuButtons</span><span class="params">()</span> </span>&#123;</span><br><span class="line">SingleButton(buttons[<span class="number">0</span>].x, buttons[<span class="number">0</span>].y, buttons[<span class="number">0</span>].r, buttons[<span class="number">0</span>].fillColor, buttons[<span class="number">0</span>].lineColor,</span><br><span class="line">buttons[<span class="number">0</span>].textColor, <span class="string">&quot; GO!&quot;</span>, buttons[<span class="number">0</span>].textSize,buttons[<span class="number">0</span>].rate);<span class="comment">//绘制开始游戏按钮</span></span><br><span class="line">SingleButton(buttons[<span class="number">1</span>].x, buttons[<span class="number">1</span>].y, buttons[<span class="number">1</span>].r, buttons[<span class="number">1</span>].fillColor, buttons[<span class="number">1</span>].lineColor,</span><br><span class="line">buttons[<span class="number">1</span>].textColor, <span class="string">&quot;离开&quot;</span>, buttons[<span class="number">1</span>].textSize, buttons[<span class="number">1</span>].rate);<span class="comment">//绘制退出游戏按钮</span></span><br><span class="line">SingleButton(buttons[<span class="number">2</span>].x, buttons[<span class="number">2</span>].y, buttons[<span class="number">2</span>].r, buttons[<span class="number">1</span>].fillColor, buttons[<span class="number">2</span>].lineColor,</span><br><span class="line">buttons[<span class="number">2</span>].textColor, <span class="string">&quot;玩法&quot;</span>, buttons[<span class="number">2</span>].textSize, buttons[<span class="number">2</span>].rate);<span class="comment">//绘制玩法介绍按钮</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/***********************</span></span><br><span class="line"><span class="comment">*输入：填充的新颜色，轮廓的新颜色，文本的新颜色</span></span><br><span class="line"><span class="comment">*输出：空</span></span><br><span class="line"><span class="comment">*作用：当鼠标指到菜单按钮时按钮进行变色以向用户反馈</span></span><br><span class="line"><span class="comment">************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MouseOnMenuButtons</span><span class="params">(COLORREF newFillColor, COLORREF newLineColor, COLORREF newTextColor)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">sqrt</span>(<span class="built_in">pow</span>((<span class="keyword">double</span>)mouse.x - buttons[<span class="number">0</span>].x, <span class="number">2.0</span>) + <span class="built_in">pow</span>((<span class="keyword">double</span>)mouse.y - buttons[<span class="number">0</span>].y, <span class="number">2.0</span>)) &lt;= buttons[<span class="number">0</span>].r)</span><br><span class="line">SingleButton(buttons[<span class="number">0</span>].x, buttons[<span class="number">0</span>].y, buttons[<span class="number">0</span>].r, newFillColor, newLineColor,</span><br><span class="line">newTextColor, <span class="string">&quot; GO!&quot;</span>, buttons[<span class="number">0</span>].textSize, buttons[<span class="number">0</span>].rate);<span class="comment">//鼠标指开始按钮时的变色</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">sqrt</span>(<span class="built_in">pow</span>((<span class="keyword">double</span>)mouse.x - buttons[<span class="number">1</span>].x, <span class="number">2.0</span>) + <span class="built_in">pow</span>((<span class="keyword">double</span>)mouse.y - buttons[<span class="number">1</span>].y, <span class="number">2.0</span>)) &lt;= buttons[<span class="number">1</span>].r)</span><br><span class="line">SingleButton(buttons[<span class="number">1</span>].x, buttons[<span class="number">1</span>].y, buttons[<span class="number">1</span>].r, newFillColor, newLineColor,</span><br><span class="line">newTextColor, <span class="string">&quot;离开&quot;</span>, buttons[<span class="number">1</span>].textSize, buttons[<span class="number">1</span>].rate);<span class="comment">//鼠标指离开按钮时的变色</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">sqrt</span>(<span class="built_in">pow</span>((<span class="keyword">double</span>)mouse.x - buttons[<span class="number">2</span>].x, <span class="number">2.0</span>) + <span class="built_in">pow</span>((<span class="keyword">double</span>)mouse.y - buttons[<span class="number">1</span>].y, <span class="number">2.0</span>)) &lt;= buttons[<span class="number">2</span>].r)</span><br><span class="line">SingleButton(buttons[<span class="number">2</span>].x, buttons[<span class="number">2</span>].y, buttons[<span class="number">2</span>].r, newFillColor, newLineColor,</span><br><span class="line">newTextColor, <span class="string">&quot;玩法&quot;</span>, buttons[<span class="number">2</span>].textSize, buttons[<span class="number">2</span>].rate);<span class="comment">//鼠标指玩法按钮时的变色</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">DrawMenuButtons();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/***********************</span></span><br><span class="line"><span class="comment">*输入：空</span></span><br><span class="line"><span class="comment">*输出：空</span></span><br><span class="line"><span class="comment">*作用：加载图片资源</span></span><br><span class="line"><span class="comment">************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Loading</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//加载背景图</span></span><br><span class="line">loadimage(&amp;playingBackground, <span class="string">&quot;./资源/背景.png&quot;</span>);</span><br><span class="line"><span class="comment">//加载玩家掩码图+原图</span></span><br><span class="line">loadimage(&amp;playerImg[<span class="number">1</span>], <span class="string">&quot;./资源/玩家.png&quot;</span>);</span><br><span class="line">loadimage(&amp;playerImg[<span class="number">0</span>], <span class="string">&quot;./资源/玩家（掩码图）.png&quot;</span>);</span><br><span class="line"><span class="comment">//加载玩家生命图片</span></span><br><span class="line">loadimage(&amp;playerBloodImg[<span class="number">1</span>], <span class="string">&quot;./资源/生命（原图）.png&quot;</span>);</span><br><span class="line">loadimage(&amp;playerBloodImg[<span class="number">0</span>], <span class="string">&quot;./资源/生命（掩码图）.png&quot;</span>);</span><br><span class="line"><span class="comment">//加载子弹掩码图+原图</span></span><br><span class="line">loadimage(&amp;bulletImg[<span class="number">0</span>], <span class="string">&quot;./资源/子弹1（掩码图）.png&quot;</span>);</span><br><span class="line">loadimage(&amp;bulletImg[<span class="number">1</span>], <span class="string">&quot;./资源/子弹1（原图）.png&quot;</span>);</span><br><span class="line"><span class="comment">//加载敌机掩码图+原图</span></span><br><span class="line">loadimage(&amp;enemyImg[<span class="number">0</span>][<span class="number">0</span>], <span class="string">&quot;./资源/敌机0（掩码图）.png&quot;</span>);</span><br><span class="line">loadimage(&amp;enemyImg[<span class="number">0</span>][<span class="number">1</span>], <span class="string">&quot;./资源/敌机0（原图）.png&quot;</span>);</span><br><span class="line">loadimage(&amp;enemyImg[<span class="number">1</span>][<span class="number">0</span>], <span class="string">&quot;./资源/敌机1（掩码图）.png&quot;</span>);</span><br><span class="line">loadimage(&amp;enemyImg[<span class="number">1</span>][<span class="number">1</span>], <span class="string">&quot;./资源/敌机1（原图）.png&quot;</span>);</span><br><span class="line">loadimage(&amp;enemyImg[<span class="number">2</span>][<span class="number">0</span>], <span class="string">&quot;./资源/敌机2（掩码图）.png&quot;</span>);</span><br><span class="line">loadimage(&amp;enemyImg[<span class="number">2</span>][<span class="number">1</span>], <span class="string">&quot;./资源/敌机2（原图）.png&quot;</span>);</span><br><span class="line">loadimage(&amp;enemyImg[<span class="number">3</span>][<span class="number">0</span>], <span class="string">&quot;./资源/敌机3（掩码图）.png&quot;</span>);</span><br><span class="line">loadimage(&amp;enemyImg[<span class="number">3</span>][<span class="number">1</span>], <span class="string">&quot;./资源/敌机3（原图）.png&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/***********************</span></span><br><span class="line"><span class="comment">*输入：空</span></span><br><span class="line"><span class="comment">*输出：空</span></span><br><span class="line"><span class="comment">*作用：初始化敌机数据，飞机的类型按既定比率随机生成</span></span><br><span class="line"><span class="comment">************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EnemyInit</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> ranNum;<span class="comment">//随机数声明</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ENEMYNUM; i++)<span class="comment">//敌机遍历</span></span><br><span class="line">&#123;</span><br><span class="line">ranNum = rand() % <span class="number">10</span>;<span class="comment">//0-9随机数</span></span><br><span class="line"><span class="keyword">if</span> (ranNum &lt;= <span class="number">2</span>) &#123;<span class="comment">//随机数为0、1、2时，初始为0号敌机</span></span><br><span class="line">enemy[i].hp = ENEMY0HP;<span class="comment">//0号敌机血量</span></span><br><span class="line">enemy[i].type = <span class="number">0</span>;<span class="comment">//0号敌机</span></span><br><span class="line"><span class="comment">//0号敌机的宽和高</span></span><br><span class="line">enemy[i].enemyWidth = EWIDTH0;</span><br><span class="line">enemy[i].enemyHeight = EHEIGHT0;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (ranNum &lt;= <span class="number">5</span>) &#123;<span class="comment">//随机数为3、4、5时，初始为1号敌机</span></span><br><span class="line">enemy[i].hp = ENEMY1HP;<span class="comment">//1号敌机血量</span></span><br><span class="line">enemy[i].type = <span class="number">1</span>;<span class="comment">//1号敌机</span></span><br><span class="line"><span class="comment">//1号敌机的宽和高</span></span><br><span class="line">enemy[i].enemyWidth = EWIDTH1;</span><br><span class="line">enemy[i].enemyHeight = EHEIGHT1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (ranNum &lt;= <span class="number">7</span>) &#123;<span class="comment">//随机数为6、7时，初始为2号敌机</span></span><br><span class="line">enemy[i].hp = ENEMY2HP;<span class="comment">//2号敌机血量</span></span><br><span class="line">enemy[i].type = <span class="number">2</span>;<span class="comment">//2号敌机</span></span><br><span class="line"><span class="comment">//2号敌机的宽和高</span></span><br><span class="line">enemy[i].enemyWidth = EWIDTH2;</span><br><span class="line">enemy[i].enemyHeight = EHEIGHT2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (ranNum &lt;= <span class="number">9</span>) &#123;<span class="comment">//随机数为8、9时，初始为3号敌机</span></span><br><span class="line">enemy[i].hp = ENEMY3HP;<span class="comment">//3号敌机血量</span></span><br><span class="line">enemy[i].type = <span class="number">3</span>;<span class="comment">//3号敌机</span></span><br><span class="line"><span class="comment">//3号敌机的宽和高</span></span><br><span class="line">enemy[i].enemyWidth = EWIDTH3;</span><br><span class="line">enemy[i].enemyHeight = EHEIGHT3;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/***********************</span></span><br><span class="line"><span class="comment">*输入：空</span></span><br><span class="line"><span class="comment">*输出：空</span></span><br><span class="line"><span class="comment">*作用：游戏初始化函数</span></span><br><span class="line"><span class="comment">************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GameInit</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//玩家飞机初始位置为游戏窗口底部居中</span></span><br><span class="line">myPlane.x = (WIDTH - PLAYERWIDTH) / <span class="number">2</span>;</span><br><span class="line">myPlane.y = HEIGHT - PLAYERHEIGHT;</span><br><span class="line">myPlane.live = <span class="literal">true</span>;<span class="comment">//存活状态：true</span></span><br><span class="line">playerBlood = MYPLANEBLOOD;</span><br><span class="line">myPlane.hp = playerBlood;</span><br><span class="line"><span class="comment">//初始子弹</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; BULLETNUM; i++)</span><br><span class="line">&#123;</span><br><span class="line">bullet[i].live = <span class="literal">false</span>;</span><br><span class="line">bullet[i].x = <span class="number">0</span>;</span><br><span class="line">bullet[i].y = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ENEMYNUM; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//初始状态，所有敌机均未存活。随后逐个生成</span></span><br><span class="line">enemy[i].live = <span class="literal">false</span>;</span><br><span class="line">enemy[i].enemyDone = <span class="literal">false</span>;<span class="comment">//初始时所有飞机都没有使玩家减血</span></span><br><span class="line">&#125;</span><br><span class="line">EnemyInit();<span class="comment">//初始敌机数据</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/***********************</span></span><br><span class="line"><span class="comment">*输入：空</span></span><br><span class="line"><span class="comment">*输出：空</span></span><br><span class="line"><span class="comment">*作用：产生单个敌机</span></span><br><span class="line"><span class="comment">************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreatEnemy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//敌机遍历</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ENEMYNUM; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (!enemy[i].live) &#123;<span class="comment">//遍历到一个敌机的存活状态为false，生成该单个敌机</span></span><br><span class="line"><span class="keyword">switch</span> (enemy[i].type) &#123;<span class="comment">//根据敌机类型决定血量</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>: enemy[i].hp = ENEMY0HP; <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>: enemy[i].hp = ENEMY1HP; <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>: enemy[i].hp = ENEMY2HP; <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>: enemy[i].hp = ENEMY3HP; <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">enemy[i].live = <span class="literal">true</span>;<span class="comment">//改为存活</span></span><br><span class="line"><span class="comment">//生成飞机位置在横轴上随机（范围：[0,WIDTH - enemy[i].enemyWidth]保证显示出完整的飞机）</span></span><br><span class="line">enemy[i].x = rand() % (WIDTH - enemy[i].enemyWidth);</span><br><span class="line">enemy[i].y = <span class="number">0</span>;<span class="comment">//窗口最顶端上生成</span></span><br><span class="line"><span class="keyword">break</span>;<span class="comment">//生成单个飞机后跳出循环</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/***********************</span></span><br><span class="line"><span class="comment">*输入：空</span></span><br><span class="line"><span class="comment">*输出：空</span></span><br><span class="line"><span class="comment">*作用：产生单个子弹</span></span><br><span class="line"><span class="comment">************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreatBullet</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; BULLETNUM; i++)<span class="comment">//遍历一梭子弹</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (!bullet[i].live) &#123;<span class="comment">//遍历到一个子弹的存活状态为false，生成该单个子弹</span></span><br><span class="line">bullet[i].live = <span class="literal">true</span>;<span class="comment">//改为存活</span></span><br><span class="line"><span class="comment">//产生的位置是玩家飞机顶部中间</span></span><br><span class="line">bullet[i].x = myPlane.x + PLAYERWIDTH / <span class="number">2</span> - BULLETWIDTH / <span class="number">2</span>;</span><br><span class="line">bullet[i].y = myPlane.y - BULLETHEIGHT; </span><br><span class="line"><span class="keyword">break</span>;<span class="comment">//生成单个子弹后跳出循环</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/***********************</span></span><br><span class="line"><span class="comment">*输入：空</span></span><br><span class="line"><span class="comment">*输出：空</span></span><br><span class="line"><span class="comment">*作用：绘制游戏图像</span></span><br><span class="line"><span class="comment">************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">GameDraw</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> bloodX = <span class="number">0</span>;</span><br><span class="line">Loading();<span class="comment">//加载图片资源</span></span><br><span class="line"><span class="comment">//贴背景图</span></span><br><span class="line">putimage(<span class="number">0</span>, <span class="number">0</span>, &amp;playingBackground);</span><br><span class="line"><span class="comment">//贴生命值图片</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; playerBlood; i++)</span><br><span class="line">&#123;</span><br><span class="line">putimage(bloodX, <span class="number">0</span>, &amp;playerBloodImg[<span class="number">0</span>], NOTSRCERASE);</span><br><span class="line">putimage(bloodX, <span class="number">0</span>, &amp;playerBloodImg[<span class="number">1</span>], SRCINVERT);</span><br><span class="line">bloodX += BLOODWIDTH+<span class="number">4</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//贴玩家掩码图+原图</span></span><br><span class="line"><span class="keyword">if</span> (myPlane.hp &gt; <span class="number">0</span>) &#123;</span><br><span class="line">putimage(myPlane.x, myPlane.y, &amp;playerImg[<span class="number">0</span>], NOTSRCERASE);</span><br><span class="line">putimage(myPlane.x, myPlane.y, &amp;playerImg[<span class="number">1</span>], SRCINVERT);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//贴生成子弹的图片</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; BULLETNUM; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (bullet[i].live) &#123;</span><br><span class="line">putimage(bullet[i].x, bullet[i].y, &amp;bulletImg[<span class="number">0</span>], NOTSRCERASE);</span><br><span class="line">putimage(bullet[i].x, bullet[i].y, &amp;bulletImg[<span class="number">1</span>], SRCINVERT);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//贴生成敌机的图片</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ENEMYNUM; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (enemy[i].live == <span class="literal">true</span>) &#123;</span><br><span class="line"><span class="keyword">switch</span> (enemy[i].type) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">putimage(enemy[i].x, enemy[i].y, &amp;enemyImg[<span class="number">0</span>][<span class="number">0</span>], NOTSRCERASE);</span><br><span class="line">putimage(enemy[i].x, enemy[i].y, &amp;enemyImg[<span class="number">0</span>][<span class="number">1</span>], SRCINVERT); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">putimage(enemy[i].x, enemy[i].y, &amp;enemyImg[<span class="number">1</span>][<span class="number">0</span>], NOTSRCERASE);</span><br><span class="line">putimage(enemy[i].x, enemy[i].y, &amp;enemyImg[<span class="number">1</span>][<span class="number">1</span>], SRCINVERT); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">putimage(enemy[i].x, enemy[i].y, &amp;enemyImg[<span class="number">2</span>][<span class="number">0</span>], NOTSRCERASE);</span><br><span class="line">putimage(enemy[i].x, enemy[i].y, &amp;enemyImg[<span class="number">2</span>][<span class="number">1</span>], SRCINVERT); <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">putimage(enemy[i].x, enemy[i].y, &amp;enemyImg[<span class="number">3</span>][<span class="number">0</span>], NOTSRCERASE);</span><br><span class="line">putimage(enemy[i].x, enemy[i].y, &amp;enemyImg[<span class="number">3</span>][<span class="number">1</span>], SRCINVERT); <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/***********************</span></span><br><span class="line"><span class="comment">*输入：（int类型）延迟的时间，单位：ms</span></span><br><span class="line"><span class="comment">*输出：（bool类型）时间到-&gt;true; 否则-&gt;false</span></span><br><span class="line"><span class="comment">*作用：计时器</span></span><br><span class="line"><span class="comment">************************/</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Timer</span><span class="params">(<span class="keyword">int</span> delay)</span> </span>&#123;</span><br><span class="line"><span class="keyword">static</span> DWORD t1, t2;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">unsigned</span>(t2 - t1) &gt; <span class="keyword">unsigned</span>(delay)) &#123;</span><br><span class="line">t1 = t2;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">t2 = clock();</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/***********************</span></span><br><span class="line"><span class="comment">*输入：（int类型）代表玩家飞机移动的速度</span></span><br><span class="line"><span class="comment">*输出：空</span></span><br><span class="line"><span class="comment">*作用：使玩家飞机移动</span></span><br><span class="line"><span class="comment">************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MyPlaneMove</span><span class="params">(<span class="keyword">int</span> speed)</span> </span>&#123;</span><br><span class="line"><span class="comment">//GetAsyncKeyState(_In_ int vKey);函数用于检测按键</span></span><br><span class="line"><span class="comment">//且移动更加流畅，可斜着移动</span></span><br><span class="line"><span class="keyword">if</span> (GetAsyncKeyState(VK_UP) || GetAsyncKeyState(<span class="string">&#x27;W&#x27;</span>)) &#123;<span class="comment">//大写W可同时表示W和w</span></span><br><span class="line"><span class="keyword">if</span>(myPlane.y&gt;<span class="number">0</span>)</span><br><span class="line">myPlane.y -= speed;<span class="comment">//上移</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (GetAsyncKeyState(VK_DOWN) || GetAsyncKeyState(<span class="string">&#x27;S&#x27;</span>)) &#123;</span><br><span class="line"><span class="keyword">if</span>(myPlane.y+ PLAYERHEIGHT&lt;HEIGHT)</span><br><span class="line">myPlane.y += speed;<span class="comment">//下移</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (GetAsyncKeyState(VK_LEFT) || GetAsyncKeyState(<span class="string">&#x27;A&#x27;</span>)) &#123;</span><br><span class="line"><span class="keyword">if</span>(myPlane.x+ PLAYERWIDTH /<span class="number">2</span>&gt;<span class="number">0</span>)</span><br><span class="line">myPlane.x -= speed;<span class="comment">//左移</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (GetAsyncKeyState(VK_RIGHT) || GetAsyncKeyState(<span class="string">&#x27;D&#x27;</span>)) &#123;</span><br><span class="line"><span class="keyword">if</span>(myPlane.x+ PLAYERWIDTH / <span class="number">2</span>&lt;WIDTH)</span><br><span class="line">myPlane.x += speed;<span class="comment">//右移</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//空格生成子弹</span></span><br><span class="line"><span class="comment">//引入一定延迟防止按一下空格产生多个子弹，同时可以控制相邻子弹的密度</span></span><br><span class="line"><span class="keyword">if</span> (GetAsyncKeyState(VK_SPACE) &amp;&amp; Timer(<span class="number">150</span>)) </span><br><span class="line">CreatBullet();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/***********************</span></span><br><span class="line"><span class="comment">*输入：（int类型）代表子弹移动的速度</span></span><br><span class="line"><span class="comment">*输出：空</span></span><br><span class="line"><span class="comment">*作用：使子弹移动</span></span><br><span class="line"><span class="comment">************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BulletMove</span><span class="params">(<span class="keyword">int</span> speed)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; BULLETNUM; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (bullet[i].live) &#123;<span class="comment">//存活子弹要自动向上移动</span></span><br><span class="line">bullet[i].y -= speed;<span class="comment">//上移</span></span><br><span class="line"><span class="keyword">if</span> (bullet[i].y + BULLETHEIGHT &lt; <span class="number">0</span>)<span class="comment">//子弹完全移出窗口后恢复false存活状态，以保持无限子弹</span></span><br><span class="line">bullet[i].live = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/***********************</span></span><br><span class="line"><span class="comment">*输入：（int类型）表示敌机整体移动的速度（因为不同类型敌机移速不同）</span></span><br><span class="line"><span class="comment">*输出：空</span></span><br><span class="line"><span class="comment">*作用：使敌机移动</span></span><br><span class="line"><span class="comment">************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EnemyMove</span><span class="params">(<span class="keyword">int</span> speed)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ENEMYNUM; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (enemy[i].live) &#123;<span class="comment">//敌机产生后要自动向下移动</span></span><br><span class="line"><span class="comment">//两种移速方案</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> 1</span></span><br><span class="line"><span class="comment">//现采取的方案：不同类型敌机用不同常数乘speed以区分出速度</span></span><br><span class="line"><span class="keyword">switch</span> (enemy[i].type)</span><br><span class="line">&#123;<span class="comment">//  0--&gt;3  快--&gt;慢  </span></span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:enemy[i].y += <span class="number">5</span> * speed; <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:enemy[i].y += <span class="number">4</span> * speed; <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:enemy[i].y += <span class="number">3</span> * speed; <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:enemy[i].y += <span class="number">2</span> * speed; <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">elif</span> 0</span></span><br><span class="line"><span class="comment">//方案二：所有敌机速度随机（由于此方案移动不太流畅，未采用）</span></span><br><span class="line">enemy[i].y += (rand() % <span class="number">10</span> + <span class="number">1</span>) * speed;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="comment">//敌机完整地离开窗口后live恢复false以保证不断有敌机产生</span></span><br><span class="line"><span class="keyword">if</span> (enemy[i].y - enemy[i].enemyHeight &gt; HEIGHT)</span><br><span class="line">&#123;</span><br><span class="line">enemy[i].live = <span class="literal">false</span>;</span><br><span class="line">enemy[i].enemyDone = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/***********************</span></span><br><span class="line"><span class="comment">*输入：空</span></span><br><span class="line"><span class="comment">*输出：空</span></span><br><span class="line"><span class="comment">*作用：玩家飞机攻击系统</span></span><br><span class="line"><span class="comment">************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Attack</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ENEMYNUM; i++)<span class="comment">//遍历敌机</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (!enemy[i].live)</span><br><span class="line"><span class="keyword">continue</span>;<span class="comment">//跳过死亡敌机</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; BULLETNUM; j++)</span><br><span class="line">&#123;<span class="comment">//遍历子弹</span></span><br><span class="line"><span class="keyword">if</span> (!bullet[j].live)</span><br><span class="line"><span class="keyword">continue</span>;<span class="comment">//跳过死亡的子弹</span></span><br><span class="line"><span class="comment">//子弹与敌机一旦有重合区域则视为攻击有效（可用EDGE调整有效边缘）</span></span><br><span class="line"><span class="keyword">if</span> ((bullet[j].x + BULLETWIDTH &gt;= enemy[i].x -EDGE &amp;&amp; bullet[j].x &lt;= enemy[i].x + enemy[i].enemyWidth + EDGE)</span><br><span class="line">&amp;&amp; (bullet[j].y &gt;= enemy[j].y -EDGE &amp;&amp; bullet[j].y &lt;= enemy[i].y + enemy[i].enemyHeight + EDGE)) &#123;</span><br><span class="line">bullet[j].live = <span class="literal">false</span>;<span class="comment">//攻击后子弹死亡</span></span><br><span class="line">enemy[i].hp--;<span class="comment">//敌机减少一点血量</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (enemy[i].hp &lt;= <span class="number">0</span>)<span class="comment">//敌机血量&lt;=0后死亡</span></span><br><span class="line">enemy[i].live = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/***********************</span></span><br><span class="line"><span class="comment">*输入：int类型  已经进行游戏的时间</span></span><br><span class="line"><span class="comment">*输出：unsigned int类型  如果游戏结束返回玩家对弹窗的选择，其他情况无意义</span></span><br><span class="line"><span class="comment">*作用：控制玩家什么时候减血或结束游戏</span></span><br><span class="line"><span class="comment">************************/</span></span><br><span class="line"><span class="function">UINT <span class="title">PlayerBlood</span><span class="params">(<span class="keyword">int</span> gameTime)</span> </span>&#123;</span><br><span class="line">HWND h = GetHWnd();<span class="comment">//获取窗口句柄</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ENEMYNUM; i++)<span class="comment">//遍历敌机</span></span><br><span class="line">&#123;  <span class="comment">//如果某敌机存活并尚未致使玩家掉血</span></span><br><span class="line"><span class="keyword">if</span> (enemy[i].live &amp;&amp; !enemy[i].enemyDone) &#123;</span><br><span class="line"><span class="comment">//减血情况一：敌机深入我方内部</span></span><br><span class="line"><span class="keyword">if</span> (enemy[i].y &gt;= HEIGHT)</span><br><span class="line">&#123;</span><br><span class="line">myPlane.hp--;</span><br><span class="line">playerBlood--;</span><br><span class="line">enemy[i].enemyDone = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//减血情况二：玩家飞机与敌机直接接触</span></span><br><span class="line"><span class="keyword">if</span> ((myPlane.x &lt; enemy[i].x + enemy[i].enemyWidth) &amp;&amp; (myPlane.x &gt; enemy[i].x - PLAYERWIDTH)</span><br><span class="line">&amp;&amp; (myPlane.y &lt; enemy[i].y + enemy[i].enemyHeight) &amp;&amp; (myPlane.y + PLAYERHEIGHT &gt; enemy[i].y))</span><br><span class="line">&#123;</span><br><span class="line">myPlane.hp--;</span><br><span class="line">playerBlood--;</span><br><span class="line">enemy[i].enemyDone = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">char</span> chTime[<span class="number">15</span>] = <span class="string">&quot;&quot;</span>;<span class="comment">//接收转换成字符串类型后的游戏时间</span></span><br><span class="line">_itoa_s(gameTime,chTime,<span class="number">15</span>,<span class="number">10</span>);<span class="comment">//_itoa_s函数将int类型转换成字符串类型</span></span><br><span class="line"><span class="comment">//拼接成一个字符串</span></span><br><span class="line"><span class="keyword">char</span> string1[<span class="number">100</span>] = <span class="string">&quot;游戏结束！太厉害了！本局中您已经坚持了&quot;</span>;</span><br><span class="line"><span class="keyword">char</span> string2[] = <span class="string">&quot;秒！是否再来一局？&quot;</span>;</span><br><span class="line"><span class="built_in">strcat</span>(string1, chTime);</span><br><span class="line"><span class="built_in">strcat</span>(string1, string2);</span><br><span class="line"><span class="keyword">if</span> (myPlane.hp &lt;= <span class="number">0</span>)<span class="comment">//血量掉完后跳出游戏结束弹窗</span></span><br><span class="line">&#123;</span><br><span class="line">mciSendStringA(<span class="string">&quot;close ./资源/战斗BGM.mp3&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">mciSendStringA(<span class="string">&quot;open ./资源/游戏结束BGM.mp3&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">mciSendStringA(<span class="string">&quot;play ./资源/游戏结束BGM.mp3&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">UINT choice = MessageBoxA(h, string1, <span class="string">&quot;游戏结束&quot;</span>, MB_YESNO);</span><br><span class="line"><span class="keyword">return</span> choice;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;<span class="comment">//其他路径中返回一个不影响YES/NO的值</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/***********************</span></span><br><span class="line"><span class="comment">*输入：int类型水印横坐标、int类型水印纵坐标、int类型水印字体尺寸、水印颜色</span></span><br><span class="line"><span class="comment">*输出：空</span></span><br><span class="line"><span class="comment">*作用：在任意位置生成任意大小、颜色的文本充当水印</span></span><br><span class="line"><span class="comment">************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">WaterMark</span><span class="params">(<span class="keyword">int</span> textX,<span class="keyword">int</span> textY, <span class="keyword">int</span> textSize,COLORREF textColor)</span> </span>&#123;</span><br><span class="line">setbkmode(TRANSPARENT);<span class="comment">//背景透明使文本背景不再是黑色</span></span><br><span class="line">settextstyle(textSize, <span class="number">0</span>, <span class="string">&quot;隶书&quot;</span>);<span class="comment">//字体格式</span></span><br><span class="line">settextcolor(textColor);<span class="comment">//字体颜色</span></span><br><span class="line">outtextxy(textX, textY, <span class="string">&quot;By 曹谋仁&quot;</span>);<span class="comment">//显示文本</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/***********************</span></span><br><span class="line"><span class="comment">*输入：空</span></span><br><span class="line"><span class="comment">*输出：空</span></span><br><span class="line"><span class="comment">*作用：游戏菜单界面</span></span><br><span class="line"><span class="comment">************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Menu</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ButtonInit();</span><br><span class="line">mciSendStringA(<span class="string">&quot;open ./资源/菜单BGM.mp3&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);<span class="comment">//打开菜单界面BGM</span></span><br><span class="line">loadimage(&amp;menuBackground, <span class="string">&quot;./资源/menuBackground.png&quot;</span>);</span><br><span class="line">putimage(<span class="number">0</span>, <span class="number">0</span>, &amp;menuBackground);</span><br><span class="line">DrawMenuButtons();</span><br><span class="line">mciSendStringA(<span class="string">&quot;play ./资源/菜单BGM.mp3 repeat&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);<span class="comment">//播放音乐</span></span><br><span class="line">WaterMark(<span class="number">2</span>, <span class="number">763</span>, <span class="number">25</span>, RGB(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>));<span class="comment">//在左下角显示水印</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/***********************</span></span><br><span class="line"><span class="comment">*输入：空</span></span><br><span class="line"><span class="comment">*输出：空</span></span><br><span class="line"><span class="comment">*作用：玩游戏中的全过程</span></span><br><span class="line"><span class="comment">************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PlayingGame</span><span class="params">()</span> </span>&#123;</span><br><span class="line">mciSendStringA(<span class="string">&quot;close ./资源/菜单BGM.mp3&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);<span class="comment">//关闭菜单界面BGM</span></span><br><span class="line">mciSendStringA(<span class="string">&quot;open ./资源/战斗BGM.mp3&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);<span class="comment">//打开游戏界面BGM</span></span><br><span class="line">L0:GameInit();<span class="comment">//初始化游戏</span></span><br><span class="line">mciSendStringA(<span class="string">&quot;play ./资源/战斗BGM.mp3 repeat&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);<span class="comment">//播放游戏界面BGM</span></span><br><span class="line">BeginBatchDraw();<span class="comment">//开启批量绘制，使循环中图像显示流畅</span></span><br><span class="line"><span class="keyword">int</span> playTime = <span class="number">0</span>;<span class="comment">//用于记录已经进行游戏的时间，同时也是得分</span></span><br><span class="line">UINT endChoice;<span class="comment">//记录结束窗口中按钮的选择</span></span><br><span class="line">DWORD startTime=clock(), endTime=clock();</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line"><span class="comment">//经过开局延迟时间后产生敌机，产生两个敌机之间间隔0.65秒</span></span><br><span class="line"><span class="keyword">if</span> (Timer(<span class="number">650</span>) &amp;&amp; <span class="keyword">unsigned</span>(endTime - startTime) &gt; STARTDELAY) &#123;</span><br><span class="line">CreatEnemy();</span><br><span class="line">&#125;</span><br><span class="line">GameDraw();<span class="comment">//绘图</span></span><br><span class="line">FlushBatchDraw();<span class="comment">//刷新</span></span><br><span class="line">MyPlaneMove(<span class="number">22</span>);<span class="comment">//玩家飞机移动</span></span><br><span class="line">endChoice = PlayerBlood(playTime);</span><br><span class="line"><span class="keyword">if</span> (endChoice == IDYES)</span><br><span class="line">&#123;</span><br><span class="line">mciSendStringA(<span class="string">&quot;close ./资源/游戏结束BGM.mp3&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">goto</span> L0;<span class="comment">//再来一局后重新开始</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (endChoice == IDNO)</span><br><span class="line">&#123;</span><br><span class="line">mciSendStringA(<span class="string">&quot;close ./资源/战斗BGM.mp3&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);<span class="comment">//关闭游戏界面BGM</span></span><br><span class="line">mciSendStringA(<span class="string">&quot;close ./资源/游戏结束BGM.mp3&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">1</span>);<span class="comment">//结束游戏终止程序</span></span><br><span class="line">&#125;</span><br><span class="line">BulletMove(<span class="number">12</span>);<span class="comment">//子弹移动</span></span><br><span class="line">EnemyMove(<span class="number">2</span>);<span class="comment">//敌机移动</span></span><br><span class="line">Attack();<span class="comment">//攻击</span></span><br><span class="line">endTime = clock();</span><br><span class="line">playTime = ((<span class="keyword">int</span>)endTime-(<span class="keyword">int</span>)startTime) / <span class="number">1000</span>;</span><br><span class="line">&#125;</span><br><span class="line">EndBatchDraw();<span class="comment">//结束批量绘制</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/***********************</span></span><br><span class="line"><span class="comment">*输入：空</span></span><br><span class="line"><span class="comment">*输出：空</span></span><br><span class="line"><span class="comment">*作用：从文件中读取规则，产生一个有关规则介绍的弹窗</span></span><br><span class="line"><span class="comment">************************/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RulesWindow</span><span class="params">()</span> </span>&#123;</span><br><span class="line">HWND h = GetHWnd();<span class="comment">//获取窗口句柄</span></span><br><span class="line"><span class="keyword">char</span> ruleText[RULEMAX];</span><br><span class="line">FILE* fp; <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">fopen_s(&amp;fp,<span class="string">&quot;./资源/Rules.txt&quot;</span>,<span class="string">&quot;r&quot;</span>);<span class="comment">//打开存放规则文本的txt文件</span></span><br><span class="line"><span class="keyword">if</span> (fp == <span class="literal">NULL</span>)</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">1</span>);<span class="comment">//打不开文件时直接停止运行</span></span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(fgets(ruleText,RULEMAX,fp)!=<span class="literal">NULL</span>)</span><br><span class="line">MessageBoxA(h, ruleText, <span class="string">&quot;玩法简介&quot;</span>, MB_OK);</span><br><span class="line">&#125; </span><br><span class="line">fclose(fp);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//主函数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">initgraph(WIDTH, HEIGHT);<span class="comment">//绘制窗口</span></span><br><span class="line">Menu();</span><br><span class="line">BeginBatchDraw();<span class="comment">//开启批量绘制，使循环中图像显示流畅</span></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">FlushBatchDraw();<span class="comment">//刷新</span></span><br><span class="line"><span class="keyword">if</span> (peekmessage(&amp;mouse, EM_MOUSE)) &#123;<span class="comment">//获取鼠标信息</span></span><br><span class="line"><span class="comment">//菜单界面中，当鼠标指针移动到按钮上时会变色以反馈用户</span></span><br><span class="line">MouseOnMenuButtons(RGB(<span class="number">56</span>, <span class="number">199</span>, <span class="number">170</span>), RGB(<span class="number">216</span>, <span class="number">120</span>, <span class="number">147</span>), RGB(<span class="number">216</span>, <span class="number">120</span>, <span class="number">147</span>));</span><br><span class="line"><span class="keyword">if</span> (mouse.message == WM_LBUTTONDOWN) &#123;<span class="comment">//按下按钮时</span></span><br><span class="line"><span class="comment">//点击&quot;Go！&quot;按钮</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">sqrt</span>(<span class="built_in">pow</span>((<span class="keyword">double</span>)mouse.x - buttons[<span class="number">0</span>].x, <span class="number">2.0</span>) + <span class="built_in">pow</span>((<span class="keyword">double</span>)mouse.y - buttons[<span class="number">0</span>].y, <span class="number">2.0</span>)) &lt;= buttons[<span class="number">0</span>].r)</span><br><span class="line">PlayingGame();</span><br><span class="line"><span class="comment">//点击&quot;离开&quot;按钮</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">sqrt</span>(<span class="built_in">pow</span>((<span class="keyword">double</span>)mouse.x - buttons[<span class="number">1</span>].x, <span class="number">2.0</span>) + <span class="built_in">pow</span>((<span class="keyword">double</span>)mouse.y - buttons[<span class="number">1</span>].y, <span class="number">2.0</span>)) &lt;= buttons[<span class="number">1</span>].r)</span><br><span class="line">&#123;</span><br><span class="line">mciSendStringA(<span class="string">&quot;close ./资源/菜单BGM.mp3&quot;</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);<span class="comment">//关闭菜单界面BGM</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//点击&quot;玩法&quot;按钮</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">sqrt</span>(<span class="built_in">pow</span>((<span class="keyword">double</span>)mouse.x - buttons[<span class="number">2</span>].x, <span class="number">2.0</span>) + <span class="built_in">pow</span>((<span class="keyword">double</span>)mouse.y - buttons[<span class="number">2</span>].y, <span class="number">2.0</span>)) &lt;= buttons[<span class="number">2</span>].r)</span><br><span class="line">RulesWindow();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">EndBatchDraw();<span class="comment">//结束批量绘制</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="一些细节-amp-技巧"><a href="#一些细节-amp-技巧" class="headerlink" title="一些细节&amp;技巧"></a>一些细节&amp;技巧</h1><h2 id="icon图标的制作与插入"><a href="#icon图标的制作与插入" class="headerlink" title="icon图标的制作与插入"></a>icon图标的制作与插入</h2><ul><li><p>找一张或画一张图片，如果想用背景是透明的，icon支持阿尔法透明通道，所以可以用Photoshop将背景做成透明通道。随后规范其尺寸大小，常用的有12×12、16×16、24×24、32×32、48×48等。</p></li><li><p>将制作好的JPG或PNG导入转换成ico格式。我用的网站是→<a href="https://www.bitbug.net/">在线ico图标转换工具</a></p></li><li><p>在visual studio中右栏资源文件中添加制作好的ico，添加成功后编译一次exe文件的图标就会变成指定图标了。（下面图片是我链接到桌面的）</p></li></ul><p><img src="https://img-blog.csdnimg.cn/0cfacf3a50f141ebb8c59be1be69967f.png#pic_center"></p><h2 id="游戏的素材收集"><a href="#游戏的素材收集" class="headerlink" title="游戏的素材收集"></a>游戏的素材收集</h2><p>素材网站推荐→<a href="https://www.aigei.com/">爱给网</a></p><h2 id="封面的平面设计"><a href="#封面的平面设计" class="headerlink" title="封面的平面设计"></a>封面的平面设计</h2><p><img src="https://img-blog.csdnimg.cn/f2ac34ec9fbb48939ec7735736a839bf.png"></p><p>推荐网站→<a href="https://www.fotor.com.cn/">Fotor 平面设计</a></p><h1 id="易错集"><a href="#易错集" class="headerlink" title="易错集"></a>易错集</h1><ul><li><p>由于EasyX图形库只针对C++，所以源文件后缀必须是cpp，.c文件会报错。</p></li><li><p>字符集方面</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">loadimage(&amp;playingBackground, <span class="string">&quot;./资源/背景.png&quot;</span>);</span><br></pre></td></tr></table></figure><p>报错：两个重载中没有一个可以转换所有参数类型。</p><p>原因：因字符集不对导致的参数有误。</p><p>解决方法：</p><ul><li>方法一：项目→属性→常规→字符集→使用多字节字符集。</li></ul></li><li><p>方法二：在字符串前面加上大写的L。</p><ul><li>方法三：用TEXT(_T())把字符串包起起来。</li></ul></li><li><p>在使用部分函数时（如：strcat()、fopen()、scanf()等函数）会有安全警告，导致无法正常运行。这是因为这些函数可能会导致数组溢出或者缓冲区溢出。</p><p>解决方法：</p><ul><li><p>方法一：在最顶端加入一行：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br></pre></td></tr></table></figure><p>就是告诉Visual Studio不要在警告，并继续使用该函数。</p></li><li><p>方法二：使用微软推荐的函数：如：scanf_s()、gets_s()、fgets_s()、strcpy_s()、strcat_s() 等。这些函数均比原先的安全，但是这些函数仅限于VS，在其他编译器中无效。</p></li></ul></li></ul><h1 id="存在的缺陷"><a href="#存在的缺陷" class="headerlink" title="存在的缺陷"></a>存在的缺陷</h1><ul><li>（较严重的bug）当一直长按空格连续发射子弹时，就不会有新的敌机产生。</li><li>有关菜单中玩法介绍的弹窗中，有两个缺陷：<ul><li>从txt文件中读取规则文本时，我用的是只读取第一行，所以全部规则介绍的文本都挤在这一行，看起来很不舒服。</li><li>目前我还不会对messagebox弹窗中的文本排版，所以弹窗中文本不同规则只以几个空格分隔，没有换行，看起来很乱。（\n、<del>r</del>n都试了还是不能换行，不知道为什么。求大佬指点~）</li></ul></li><li>游戏玩法系统上比较单一，既没有关卡或BOSS，也没有技能或buff加持。</li><li>游戏进行中没有暂停功能，也没有调节背景音乐的功能。</li><li>目前游戏整体还很粗糙，还有很多细节需要去优化。比如子弹与敌机碰撞时、敌机或玩家死亡时、玩家发射子弹时看起来很生硬，都缺少音效和动画。当然，未完善更多细节也需要我学习更多新知识，以目前的水平暂时做不到的。</li></ul><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><a href="https://www.bilibili.com/video/BV1T3411r7dP">https://www.bilibili.com/video/BV1T3411r7dP</a></li><li><a href="https://docs.easyx.cn/zh-cn/intro">https://docs.easyx.cn/zh-cn/intro</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> C语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
            <tag> EasyX </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
